{"version":3,"sources":["classes/firebase.ts","components/GameListItem.tsx","classes/Game.ts","classes/utils.ts","components/GameList.tsx","components/MyAppBar.tsx","components/CreateTeamDisplay.tsx","components/CreateGame.tsx","components/HistoryItem.tsx","components/PlayGameTeam.tsx","components/PlayGame.tsx","components/HomeScreen.tsx","components/SignIn.tsx","components/SignUp.tsx","components/LoginScreen.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","GameListItem","game","onClick","useState","Date","date","name","gameName","isFavorite","setIsFavorite","useEffect","ref","id","on","snapshot","val","ListItem","key","button","ListItemText","primary","secondary","toDateString","ListItemSecondaryAction","edge","checked","onChange","value","gameId","update","console","log","checkedIcon","style","color","icon","Game","teams","this","Team","score","history","TeamHistory","addScore","String","pastScores","push","indexOfScore","splice","updatedScore","totalScore","forEach","convertedScore","Number","convertGame","defaultState","useStyles","makeStyles","theme","createStyles","spinner","display","marginLeft","spacing","alignItems","justifyContent","minHeight","GameList","startGame","classes","games","setGames","gamesHaveLoaded","setGamesHaveLoaded","userHasNoGames","setUserHasNoGames","rootRef","usersRef","child","auth","currentUser","uid","gamesRef","orderByChild","a","count","newGames","snap","once","set","newGame","numChildren","reverse","List","component","map","index","Divider","Typography","variant","padding","className","root","flexGrow","menuButton","marginRight","title","MyAppBar","AppBar","Toolbar","IconButton","aria-label","signOut","card","text","CreateTeamDisplay","team","onDelete","Paper","Grid","container","justify","item","xs","paddingTop","paddingBottom","textAlign","paper","marginTop","flexDirection","avatar","margin","backgroundColor","palette","main","form","width","submit","teamState","CreateGame","setGameName","setTeams","currentTeam","setCurrentTeam","addTeam","newTeam","onSubmit","event","preventDefault","userId","newGameRef","now","Map","Object","fromEntries","onDeleteTeam","teamName","newTeams","indexToRemove","findIndex","maxWidth","CssBaseline","TextField","required","fullWidth","label","target","autoFocus","length","autoComplete","onKeyPress","Button","type","editButton","clearIconContainer","clearIcon","HistoryItem","isEditing","teamIndex","teamHistory","teamScore","stopPropagation","newHistory","newScore","removeHistoryItem","fontSize","PlayGameTeam","updatePoints","cardExpanded","setCardExpanded","scoreChange","setScoreChange","setIsEditing","isPositive","inputMode","e","historyIndex","PlayGame","props","setGame","addGameButton","position","bottom","right","HomeScreen","isCreatingGame","setIsCreatingGame","isPlayingGame","setIsPlayingGame","gameState","gameToPlay","setGameToPlay","Container","size","Copyright","align","getFullYear","SignIn","toggle","username","setUsername","password","setPassword","rememberMe","setRememberMe","incorrectPassword","setIncorrectPassword","Avatar","signInWithEmailAndPassword","catch","error","errorCode","code","message","toLowerCase","FormHelperText","FormControlLabel","control","Checkbox","Link","href","provider","GoogleAuthProvider","signInWithPopup","then","user","email","credential","Box","mt","SignUp","setEmail","hasError","setHasError","errorMessage","setErrorMessage","createUserWithEmailAndPassword","LoginScreen","isSignUp","setIsSignUp","toggleSignUp","App","darkState","palletType","loggedIn","setLoggedIn","darkTheme","createMuiTheme","onAuthStateChanged","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.018391a1.chunk.js","sourcesContent":["import firebase from 'firebase'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB2aJwBVVsCSVzX_MnSHAbO5gXgn59CeXs\",\n  authDomain: \"scoregames-c0233.firebaseapp.com\",\n  databaseURL: \"https://scoregames-c0233.firebaseio.com\",\n  projectId: \"scoregames-c0233\",\n  storageBucket: \"scoregames-c0233.appspot.com\",\n  messagingSenderId: \"475132375224\",\n  appId: \"1:475132375224:web:206d8be3fc01e8faa6044d\",\n  measurementId: \"G-RQT21T265Y\",\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst database = firebase.database()\n\nexport default firebase\n\n\n\n\nexport function firebaseUpdateIsFavorite(value: boolean, gameId: string) {\n  database.ref(\"games/\" + gameId).update({\n    isFavorite: value\n  }, () => {\n    console.log(\"Favorite updated\")\n  })\n}","import React, { useState, useEffect } from \"react\";\nimport Game from \"../classes/Game\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport StarBorder from \"@material-ui/icons/StarBorder\";\nimport CheckBox from \"@material-ui/core/Checkbox\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport firebase, { firebaseUpdateIsFavorite } from \"../classes/firebase\";\n\ninterface Props {\n  game: Game;\n  onClick: Function;\n}\n\n\nconst GameListItem = ({ game, onClick }: Props) => {\n\n  // state to keep track of\n  const [date] = useState(new Date(game.date));\n  const [gameName] = useState(game.name);\n  const [isFavorite, setIsFavorite] = useState(game.isFavorite);\n\n  const starClicked = () => {\n    firebaseUpdateIsFavorite(!isFavorite, game.id);\n  };\n\n  useEffect(() => {\n    firebase.database().ref(`games/${game.id}/isFavorite`).on(\"value\", snapshot => {\n      setIsFavorite(snapshot.val())\n    })\n  }, []);\n\n  return (\n    <ListItem\n      key={game.id}\n      button\n      onClick={() => {\n        onClick(game)\n      }}\n    >\n      <ListItemText primary={gameName} secondary={date.toDateString()} />\n\n      <ListItemSecondaryAction>\n        <CheckBox\n          edge=\"end\"\n          checked={isFavorite}\n          onChange={starClicked}\n          checkedIcon={<StarIcon style={{ color: \"#FFDF00\" }} />}\n          icon={<StarBorder />}\n        />\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default GameListItem;\n","\n\nexport default class Game {\n  id: string\n  date: number\n  name: string\n  teams: Array<Team>\n  isFavorite: boolean\n\n  constructor(id: string, date: number, name: string ,teams: Array<Team>, isFavorite: boolean = false) {\n    this.id = id\n    this.date = date\n    this.name = name\n    this.teams = teams\n    this.isFavorite = isFavorite\n  }\n\n  tempGame(): Game {\n    return new Game(this.id, this.date, this.name, this.teams, this.isFavorite)\n  }\n}\n\nexport class Team {\n  name: string\n  score: number\n  history: TeamHistory\n\n  constructor(name: string, score: number = 0, history: TeamHistory = new TeamHistory()) {\n    this.name = name\n    this.score = score\n    this.history = history\n  }\n\n\n  addScore(score: number) {\n    this.score += score\n\n    //update history\n    if (score > 0) {\n      this.history.addScore(\"+\" + String(score))\n    } \n    else {\n      this.history.addScore(String(score))\n    }\n  }\n\n  createTeamForFirebase(): Team {\n    return new Team(this.name,this.score,this.history)\n  }\n}\n\nexport class TeamHistory {\n  pastScores: Array<string>\n\n  constructor(pastScores: Array<string> = []) {\n    \n    this.pastScores = pastScores\n  }\n\n  addScore(score: string) {\n    this.pastScores.push(score)\n  }\n\n  removeScore(indexOfScore: number) {\n    this.pastScores.splice(indexOfScore, 1)\n  }\n\n  editScore(indexOfScore: number, updatedScore: string) {\n    this.pastScores[indexOfScore] = updatedScore\n  }\n\n  calcTotalScore() : number {\n    let totalScore = 0\n\n    this.pastScores.forEach(score => {\n      let convertedScore = Number(score)\n      totalScore = totalScore + convertedScore\n    })\n\n    return totalScore\n  }\n}","import Game, { Team } from \"./Game\";\nimport * as firebase from 'firebase';\n\nexport function convertGameList(snapshot: firebase.database.DataSnapshot): Array<Game> {\n  let games: Array<Game> = []\n\n  snapshot.forEach(snapshot => {\n    const game = convertGame(snapshot)\n    games.push(game)\n  });\n\n\n\n  return games\n}\n\nexport function convertGame(snapshot: firebase.database.DataSnapshot): Game {\n  const game = snapshot.val()\n  const id = game.id as string || \"\";\n  const date = game.date as number || 0;\n  const name = game.name as string || \"\";\n  const teams = game.teams as Array<Team> || null;\n  const isFavorite = game.isFavorite as boolean || false;\n\n  return new Game(id, date, name, teams, isFavorite)\n}\n\n\n","import React, { ReactElement, useState, useEffect } from \"react\";\nimport Game from \"../classes/Game\";\nimport GameListItem from \"./GameListItem\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport firebase from \"../classes/firebase\";\nimport { convertGame } from \"../classes/utils\";\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\nimport { Typography } from \"@material-ui/core\";\n\n\n// const mockData1 = new Game(\"asdfasdf1\", 2342314234, \"Name 1\", [\n//   new Team(\"bob\", 500),\n// ]);\n// const mockData2 = new Game(\"asdfasdf2\", 2342314234, \"Name 1\", [\n//   new Team(\"bob\", 500),\n// ]);\n// const mockData3 = new Game(\"asdfasdf3\", 2342314234, \"Name 1\", [\n//   new Team(\"bob\", 500),\n// ]);\n// const mockData4 = new Game(\"asdfasdf4\", 2342314234, \"Name 1\", [\n//   new Team(\"bob\", 500),\n// ]);\n// const mockData5 = new Game(\"asdfasdf5\", 2342314234, \"Name 1\", [\n//   new Team(\"bob\", 500),\n// ]);\n\ninterface Props {\n  startGame: Function;\n}\n\nconst database = firebase.database();\nvar defaultState: Array<Game> = [\n  // mockData1,\n  // mockData2,\n  // mockData3,\n  // mockData4,\n  // mockData5,\n];\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spinner: {\n      display: \"flex\",\n      \"& > * + *\": {\n        marginLeft: theme.spacing(2),\n      },\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      minHeight: \"200px\",\n    },\n  })\n);\n\nexport default function GameList({startGame}: Props): ReactElement {\n  const classes = useStyles();\n  const [games, setGames] = useState(defaultState);\n  const [gamesHaveLoaded, setGamesHaveLoaded] = useState(false);\n  const [userHasNoGames, setUserHasNoGames] = useState(false);\n\n  // database references\n  const rootRef = database.ref();\n  const usersRef = rootRef.child(\"/Users/\" + firebase.auth().currentUser?.uid);\n  const gamesRef = rootRef.child(\"/games\");\n  //const gameCodesRef = rootRef.child(\"/GameCodes\");\n\n  // When the component first loads run this\n  useEffect(() => {\n    // Fetch all of the games from firebase\n    usersRef\n      .child(\"/games\")\n      .orderByChild(\"date\")\n      .on(\"value\", async (snapshot) => {\n\n        // user has no games.\n        if (snapshot.val() === null) {\n          setGamesHaveLoaded(false);\n          setUserHasNoGames(true);\n\n          return;\n        }\n\n        var count = 0;\n\n        const newGames: Array<Game> = [];\n\n        snapshot.forEach((snap) => {\n          gamesRef.child(\"/\" + snap.key).once(\"value\", (game) => {\n            if (game.val() === null) {\n              // Game Id not found lets clean up the database a little and delete the ones that the game does not exist on.\n              usersRef.child(\"/games/\" + snap.key).set(null);\n            } else {\n              //game.val() contains a single game.\n              const newGame = convertGame(game);\n              newGames.push(newGame);\n              count = count + 1;\n              if (count === snapshot.numChildren()) {\n                newGames.reverse();\n                setGames(newGames);\n                setGamesHaveLoaded(true);\n                setUserHasNoGames(false);\n              }\n            }\n          });\n        });\n      });\n  }, []);\n\n  return (\n    <>\n      {gamesHaveLoaded ? (\n        <List component=\"nav\">\n          {games.map((game, index) => (\n            <div key={game.id}>\n              {index !== 0 && <Divider />}\n              <GameListItem onClick={startGame} game={game} />\n            </div>\n          ))}\n        </List>\n      ) : userHasNoGames ? (\n        <Typography variant=\"subtitle1\" style={{ padding: \"20px\" }}>\n          No games here... You should make one!\n        </Typography>\n      ) : (\n        <div className={classes.spinner}>\n          <CircularProgress />\n        </div>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport firebase from \"../classes/firebase\"\n\ninterface Props {\n  title: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  })\n);\n\nconst MyAppBar = ({ title }: Props) => {\n  const classes = useStyles();\n\n  const accountButtonClick = () => {\n    firebase.auth().signOut()\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n\n          <Typography variant=\"h6\" className={classes.title}>\n            {title}\n          </Typography>\n\n          <IconButton color=\"inherit\" edge=\"end\" onClick={accountButtonClick}>\n            <AccountCircle />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      \n      <Toolbar/>\n    </div>\n  );\n};\n\nexport default MyAppBar;\n","import React from \"react\";\nimport { Team } from \"../classes/Game\";\nimport {\n  Typography,\n  makeStyles,\n  Theme,\n  createStyles,\n  Paper,\n} from \"@material-ui/core\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\n\ninterface Props {\n  team: Team;\n  onDelete: Function;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {},\n    text: {},\n  })\n);\n\nconst CreateTeamDisplay = ({ team, onDelete }: Props) => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.card} variant=\"outlined\">\n      <Grid container justify=\"center\" alignItems=\"center\">\n        <Grid item xs={8}>\n          <Typography\n            variant=\"subtitle1\"\n            style={{ padding: \"5px\", paddingTop: \"20px\", paddingBottom: \"20px\" }}\n          >\n            {team.name}\n          </Typography>\n        </Grid>\n        <Grid item xs={4}>\n          <IconButton onClick={() => onDelete(team.name)}>\n            <DeleteIcon />\n          </IconButton>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default CreateTeamDisplay;\n","import React, { useState, FormEvent } from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { Theme } from \"@material-ui/core/styles/createMuiTheme\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport Game, { Team } from \"../classes/Game\";\nimport Container from \"@material-ui/core/Container/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CreateTeamDisplay from \"./CreateTeamDisplay\";\nimport firebase from \"../classes/firebase\"\n\ninterface Props {\n  startGame: Function;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      justifyContent: \"center\",\n      textAlign: \"center\",\n      alignItems: \"center\",\n    },\n    paper: {\n      marginTop: theme.spacing(4),\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n    avatar: {\n      margin: theme.spacing(2),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: \"100%\", // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  })\n);\n\nconst teamState: Array<Team> = [];\n\nconst CreateGame = ({ startGame }: Props) => {\n  const classes = useStyles();\n\n  const [gameName, setGameName] = useState(\"\");\n  const [teams, setTeams] = useState(teamState);\n  const [currentTeam, setCurrentTeam] = useState(\"\");\n\n  const onGameNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setGameName(event.target.value);\n  };\n\n  const onCurrentTeamChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCurrentTeam(event.target.value);\n  };\n\n  const addTeam = () => {\n    if (currentTeam === \"\") {\n      return;\n    }\n\n    const newTeam = new Team(currentTeam);\n    setTeams([...teams, newTeam]);\n    setCurrentTeam(\"\");\n  };\n\n  const onSubmit = async (event: FormEvent) => {\n    event.preventDefault();\n\n    const userId = firebase.auth().currentUser?.uid\n    const newGameRef = (await firebase.database().ref(\"/games\").push())\n    \n    const newGame = new Game(newGameRef.key || String(Date.now()), Date.now(), gameName, teams)\n\n    newGameRef.set(newGame)\n    let update = new Map();\n    update.set(newGameRef.key, true)\n\n    firebase\n      .database()\n      .ref(\"/Users/\" + userId + \"/games\")\n      .update(Object.fromEntries(update), () => {\n        startGame(newGame);\n      });\n  };\n\n  const onDeleteTeam = (teamName: string) => {\n    console.log(\"deleteingTeam\");\n    const newTeams = [...teams];\n    const indexToRemove = newTeams.findIndex(team => team.name === teamName)\n    newTeams.splice(indexToRemove, 1)\n    setTeams(newTeams);\n  };\n\n  const keyPressed = (event:  React.KeyboardEvent) => {\n    if(event.key === 'Enter') {\n      event.preventDefault()\n      addTeam()\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\">\n            {gameName !== \"\" ? gameName : \"New Game\"}\n          </Typography>\n          <form className={classes.form} onSubmit={onSubmit}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Game Name\"\n              name=\"gameName\"\n              value={gameName}\n              onChange={onGameNameChange}\n              autoFocus\n            />\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Typography component=\"p\" variant=\"h6\">\n                  Teams/Players\n                </Typography>\n              </Grid>\n\n              {teams.map((team) => (\n                <Grid item xs={6} key={team.name}>\n                  <CreateTeamDisplay team={team} onDelete={onDeleteTeam} />\n                </Grid>\n              ))}\n\n              <Grid item xs={12}>\n                {teams.length === 0 && (\n                  <Typography\n                    component=\"p\"\n                    variant=\"subtitle2\"\n                    color=\"textSecondary\"\n                  >\n                    Teams will show up here once added\n                  </Typography>\n                )}\n              </Grid>\n\n              <Grid container spacing={2}>\n                <Grid item xs={8}>\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    label=\"Team Name\"\n                    value={currentTeam}\n                    onChange={onCurrentTeamChange}\n                    autoComplete=\"current-password\"\n                    onKeyPress={keyPressed}\n                  />\n                </Grid>\n                <Grid item xs={4}>\n                  <Button\n                    fullWidth\n                    variant=\"text\"\n                    color=\"secondary\"\n                    className={classes.submit}\n                    onClick={addTeam}\n                  >\n                    Add Team\n                  </Button>\n                </Grid>\n              </Grid>\n            </Grid>\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Create Game\n            </Button>\n          </form>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default CreateGame;\n","import React from \"react\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  Paper,\n  Grid,\n  IconButton,\n} from \"@material-ui/core\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport firebase from \"../classes/firebase\"\nimport { TeamHistory } from \"../classes/Game\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      marginTop: theme.spacing(2),\n      textAlign: \"center\",\n      padding: \"10px\",\n    },\n    teamName: {\n      textAlign: \"left\",\n      marginLeft: theme.spacing(2),\n    },\n    history: {\n      padding: \"5px\",\n      margin: \"5px\",\n    },\n    editButton: {\n      textAlign: \"right\",\n    },\n    clearIconContainer: {},\n    clearIcon: {\n      padding: \"0\",\n      margin: \"0\",\n    },\n  })\n);\n\ninterface Props {\n  isEditing: boolean;\n  score: string;\n  index: number;\n  teamIndex: number;\n  teamHistory: TeamHistory;\n  teamScore: number;\n  gameId: string;\n}\n\nconst HistoryItem = ({ isEditing, score, index, teamIndex, teamHistory, teamScore, gameId }: Props) => {\n  const classes = useStyles();\n\n  const removeHistoryItem = () => {\n    if (!isEditing) {\n      return;\n    }\n\n    const newHistory: Array<string> = [...teamHistory.pastScores];\n    newHistory.splice(index, 1)\n    const newScore = teamScore - Number(score)\n\n    console.log(\"current team history\", teamHistory)\n    console.log(\"current team index \", teamIndex)\n\n    firebase\n      .database()\n      .ref(\"/games/\" + gameId + \"/teams/\" + teamIndex)\n      .update({\n        score: newScore,\n        history: {\n          pastScores: newHistory,\n        },\n      }, () => {\n        console.log(\"history removed\")\n      });\n  };\n\n  return (\n    <Paper variant=\"outlined\" className={classes.history}>\n      <Grid container justify=\"center\" alignItems=\"center\">\n        {isEditing && (\n          <Grid item xs={12} className={classes.clearIconContainer}>\n            <IconButton\n              onClick={(event) => {\n                event.stopPropagation();\n                removeHistoryItem();\n              }}\n              className={classes.clearIcon}\n            >\n              <ClearIcon fontSize=\"small\" className={classes.clearIcon} />\n            </IconButton>\n          </Grid>\n        )}\n        <Grid item xs={12}>\n          {score}\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default HistoryItem;\n","import React, { FormEvent, useState } from \"react\";\nimport Game, { Team } from \"../classes/Game\";\nimport {\n  Paper,\n  makeStyles,\n  Theme,\n  createStyles,\n  Grid,\n  Typography,\n  IconButton,\n  TextField,\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport firebase from \"../classes/firebase\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport HistoryItem from \"./HistoryItem\";\n\ninterface Props {\n  team: Team;\n  updatePoints: Function;\n  index: number;\n  gameId: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      marginTop: theme.spacing(2),\n      textAlign: \"center\",\n      padding: \"10px\",\n    },\n    teamName: {\n      textAlign: \"left\",\n      marginLeft: theme.spacing(2),\n    },\n    history: {\n      padding: \"5px\",\n      margin: \"5px\",\n    },\n    editButton: {\n      textAlign: \"right\",\n    },\n    clearIconContainer: {},\n    clearIcon: {\n      padding: \"0\",\n      margin: \"0\",\n    },\n  })\n);\n\nconst PlayGameTeam = ({ team, updatePoints, index, gameId }: Props) => {\n  const classes = useStyles();\n\n  const [cardExpanded, setCardExpanded] = useState(false);\n  const [scoreChange, setScoreChange] = useState(\"\");\n  const [isEditing, setIsEditing] = useState(false);\n\n  const expandCard = () => {\n    setCardExpanded(!cardExpanded);\n  };\n\n  const onInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setScoreChange(event.target.value);\n  };\n\n  // const updatePoints = () => {\n  //   // update the model with a new instance\n  //   const newTeam = team.createTeamForFirebase()\n  //   newTeam.addScore(Number(scoreChange))\n\n  //   firebase.database().ref(\"/games/\" + gameId + \"/\" + index).update(newTeam)\n\n  // }\n\n  const addScore = (isPositive: boolean) => {\n    if (scoreChange === \"\") {\n      return;\n    }\n\n    if (isPositive) {\n      updatePoints(Number(scoreChange), team.name, index);\n    } else {\n      updatePoints(Number(\"-\" + scoreChange), team.name, index);\n    }\n\n    setScoreChange(\"\");\n    setCardExpanded(false);\n  };\n\n  return (\n    <Paper className={classes.paper} variant=\"outlined\" onClick={expandCard}>\n      <Grid container justify=\"center\" alignItems=\"center\">\n        <Grid item xs={12}>\n          <Typography variant=\"subtitle1\" className={classes.teamName}>\n            {team.name}\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\">{team.score}</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <IconButton>\n            <ExpandMoreIcon />\n          </IconButton>\n        </Grid>\n\n        {cardExpanded && (\n          <>\n            <Grid item xs={3}>\n              <IconButton onClick={() => addScore(false)}>\n                <RemoveIcon color=\"secondary\" />\n              </IconButton>\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                type=\"tel\"\n                label=\"+ or - Score\"\n                name=\"gameName\"\n                value={scoreChange}\n                onChange={onInputChange}\n                autoFocus\n                inputMode=\"numeric\"\n                onClick={(e) => e.stopPropagation()}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <IconButton onClick={() => addScore(true)}>\n                <AddIcon color=\"primary\" />\n              </IconButton>\n            </Grid>\n\n            {team.history &&\n              team.history.pastScores.map((score, historyIndex) => {\n                return (\n                  <HistoryItem\n                    key={index}\n                    isEditing={isEditing}\n                    score={score}\n                    index={historyIndex}\n                    teamIndex={index}\n                    teamScore={team.score}\n                    teamHistory={team.history}\n                    gameId={gameId}\n                  />\n                );\n              })}\n\n            <Grid item xs={12} className={classes.editButton}>\n              <IconButton\n                onClick={(event) => {\n                  event.stopPropagation();\n                  setIsEditing(!isEditing);\n                }}\n              >\n                <EditIcon />\n              </IconButton>\n            </Grid>\n          </>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default PlayGameTeam;\n","import React, { useState, useEffect } from \"react\";\nimport Game, { TeamHistory, Team } from \"../classes/Game\";\nimport firebase from \"../classes/firebase\";\nimport { convertGame } from \"../classes/utils\";\nimport PlayGameTeam from \"./PlayGameTeam\";\n\ninterface Props {\n  game: Game;\n}\n\nconst PlayGame = (props: Props) => {\n  const [game, setGame] = useState(props.game);\n\n  const updatePoints = (score: number, teamName: string, index: number) => {\n    let newHistory: Array<string> = [];\n\n    if (game.teams[index].history) {\n      if (score > 0) {\n        newHistory = [\n          ...game.teams[index].history.pastScores,\n          \"+\" + String(score),\n        ];\n      } else {\n        newHistory = [...game.teams[index].history.pastScores, String(score)];\n      }\n    } else {\n      if (score > 0) {\n        newHistory.push(\"+\" + String(score));\n      } else {\n        newHistory.push(String(score));\n      }\n    }\n\n    const newScore = game.teams[index].score + score;\n\n    firebase\n      .database()\n      .ref(\"/games/\" + props.game.id + \"/teams/\" + index)\n      .update({\n        score: newScore,\n        history: {\n          pastScores: newHistory,\n        },\n      });\n  };\n\n  useEffect(() => {\n    const database = firebase.database();\n\n    database.ref(\"/games/\" + game.id).on(\"value\", (snapshot) => {\n      setGame(convertGame(snapshot));\n    });\n  }, []);\n\n  return (\n    <div>\n      {game.teams.map((team, index) => (\n        <PlayGameTeam\n          team={team}\n          key={index}\n          index={index}\n          updatePoints={updatePoints}\n          gameId={props.game.id}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default PlayGame;\n","import React, { useState } from \"react\";\nimport GameList from \"./GameList\";\nimport MyAppBar from \"./MyAppBar\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport Game, { Team, TeamHistory } from \"../classes/Game\";\nimport firebase from \"../classes/firebase\";\nimport CreateGame from \"./CreateGame\";\nimport Fab from \"@material-ui/core/Fab/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { Theme } from \"@material-ui/core/styles/createMuiTheme\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport PlayGame from \"./PlayGame\"\n\ninterface Props {}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {},\n    addGameButton: {\n      position: \"absolute\",\n      bottom: theme.spacing(2),\n      right: theme.spacing(2),\n    },\n  })\n);\n\nvar gameState: Game;\n\nconst HomeScreen = (props: Props) => {\n  const classes = useStyles();\n\n  const [isCreatingGame, setIsCreatingGame] = useState(false);\n  const [isPlayingGame, setIsPlayingGame] = useState(false);\n  const [gameToPlay, setGameToPlay] = useState(gameState);\n\n  const createGame = () => {\n    setIsCreatingGame(true);\n    setIsPlayingGame(false);\n  };\n\n  const startGame = (game: Game) => {\n    console.log(\"start game called\");\n    setGameToPlay(game);\n    setIsCreatingGame(false);\n    setIsPlayingGame(true);\n  };\n\n  return (\n    <div className={classes.root}>\n      <MyAppBar\n        title={\n          isCreatingGame\n            ? \"Create Game\"\n            : isPlayingGame\n            ? gameToPlay.name\n            : \"My Games\"\n        }\n      />\n      <Container>\n        {isCreatingGame && <CreateGame startGame={startGame} />}\n        {isPlayingGame && <PlayGame game={gameToPlay} />}\n        {isCreatingGame === false && isPlayingGame === false && (\n          <>\n            <GameList startGame={startGame} />\n            <div className={classes.addGameButton}>\n              <Fab\n                color=\"secondary\"\n                size=\"large\"\n                aria-label=\"add\"\n                onClick={createGame}\n              >\n                <AddIcon />\n              </Fab>\n            </div>\n          </>\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default HomeScreen;\n\n// const buttonClick = async () => {\n//   let history = new TeamHistory([\"+500\", \"-200\", \"+5\", \"+200\", \"-299\"]);\n//   let team = new Team(\"Bob\", history.calcTotalScore(), history);\n\n//   let history2 = new TeamHistory([\"+50\", \"-20\", \"+50\", \"+204560\", \"-299\"]);\n//   let team2 = new Team(\"Billy\", history2.calcTotalScore(), history);\n//   let newGameRef = await firebase.database().ref(\"/games\").push();\n//   let game = new Game(\n//     newGameRef.key || \"123214\",\n//     Date.now(),\n//     \"Game created in code\",\n//     [team, team2]\n//   );\n\n//   newGameRef.set(game);\n//   let update = new Map();\n//   update.set(newGameRef.key, true);\n\n//   let userId = firebase.auth().currentUser?.uid;\n//   console.log(userId);\n//   console.log(update);\n//   firebase\n//     .database()\n//     .ref(\"/Users/\" + userId + \"/games\")\n//     .update(Object.fromEntries(update), () => {\n//       console.log(\"completed?\");\n//     });\n// };\n","import React, { FormEvent, useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport firebase from \"../classes/firebase\";\nimport { FormHelperText } from \"@material-ui/core\";\nimport GoogleButton from \"react-google-button\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"© Copyright \"}\n      {new Date().getFullYear()}\n      {\" | Jordan Burdett\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(2),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\ninterface Props {\n  toggle: Function;\n}\n\nexport default function SignIn({ toggle }: Props) {\n  const classes = useStyles();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(false);\n  const [incorrectPassword, setIncorrectPassword] = useState(false);\n\n  const onSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(username, password)\n      .catch((error) => {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n\n        if (errorCode === \"auth/wrong-password\") {\n          setIncorrectPassword(true);\n        }\n        console.log(error);\n      });\n  };\n\n  const signInWithGoogle = () => {\n    let provider = new firebase.auth.GoogleAuthProvider();\n\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then((user) => {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        console.log(user);\n        // ...\n      })\n      .catch(function (error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // The email of the user's account used.\n        var email = error.email;\n        // The firebase.auth.AuthCredential type that was used.\n        var credential = error.credential;\n        // ...\n      });\n  };\n\n  const onUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setUsername(event.target.value.toLowerCase());\n  };\n\n  const onPasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPassword(event.target.value);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} onSubmit={onSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            value={username}\n            onChange={onUsernameChange}\n            autoFocus\n          />\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={onPasswordChange}\n            autoComplete=\"current-password\"\n          />\n\n          {incorrectPassword && (\n            <FormHelperText error={true}>* Incorrect Password</FormHelperText>\n          )}\n\n          <FormControlLabel\n            control={\n              <Checkbox\n                value=\"remember\"\n                checked={rememberMe}\n                color=\"primary\"\n                onChange={() => setRememberMe(!rememberMe)}\n              />\n            }\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link onClick={() => toggle()} variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid item xs={12}>\n              <GoogleButton\n                onClick={signInWithGoogle}\n                style={{ marginTop: \"50px\" }}\n              />\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React, { useState, FormEvent } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport firebase from \"../classes/firebase\";\nimport { FormHelperText } from \"@material-ui/core\";\nimport GoogleButton from \"react-google-button\"\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"© Copyright \"}\n      {new Date().getFullYear()}\n      {\" | Jordan Burdett\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\ninterface Props {\n  toggle: Function;\n}\n\nexport default function SignUp({ toggle }: Props) {\n  const classes = useStyles();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  \n  const onEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(event.target.value.toLowerCase());\n  };\n\n  const onPasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPassword(event.target.value);\n  };\n\n  const signInWithGoogle = () => {\n    let provider = new firebase.auth.GoogleAuthProvider();\n\n    firebase.auth().signInWithPopup(provider).then( user => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      console.log(user)\n      // ...\n    }).catch(function(error) {\n      // Handle Errors here.\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      var errorCode = error.code;\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      var errorMessage = error.message;\n      // The email of the user's account used.\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      var credential = error.credential;\n      // ...\n    });\n  }\n\n  const onSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    // If I wanted to do a check to ensure that we have a strong password or something do it here\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .catch((error) => {\n        setErrorMessage(error.message);\n        setHasError(true);\n      });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} onSubmit={onSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={email}\n                onChange={onEmailChange}\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={password}\n                onChange={onPasswordChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    value=\"keepMeSignedIn\"\n                    color=\"primary\"\n                    checked={rememberMe}\n                    onChange={() => setRememberMe(!rememberMe)}\n                  />\n                }\n                label=\"Always remember me on this device?\"\n              />\n\n              {hasError && (\n                <FormHelperText error={true}>\n                  * {errorMessage}\n                </FormHelperText>\n              )}\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link onClick={() => toggle()} variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n\n          <Grid container>\n            <Grid item xs={12}>\n              <GoogleButton onClick={signInWithGoogle} style={{marginTop: \"50px\"}}/>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport SignIn from \"./SignIn\";\nimport SignUp from \"./SignUp\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\n\ninterface Props {}\n\nconst LoginScreen = (props: Props) => {\n  const [isSignUp, setIsSignUp] = useState(false);\n\n  const toggleSignUp = () => {\n    setIsSignUp(!isSignUp);\n  };\n\n  return (\n    <>\n      <Container>\n        <Typography align=\"center\" variant=\"h3\" style={{marginTop: \"50px\"}}>\n          Score Games\n        </Typography>\n      </Container>\n      {isSignUp ? (\n        <SignUp toggle={toggleSignUp} />\n      ) : (\n        <SignIn toggle={toggleSignUp} />\n      )}\n    </>\n  );\n};\n\nexport default LoginScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport DarkModeToggle from \"./DarkModeToggle\";\nimport HomeScreen from \"./HomeScreen\";\nimport LoginScreen from \"./LoginScreen\";\nimport firebase from \"firebase\";\n\nfunction App() {\n  const [darkState, setDarkState] = useState(false);\n  const palletType = darkState ? \"dark\" : \"light\";\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: palletType,\n    },\n  });\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        setLoggedIn(true);\n      } else {\n        setLoggedIn(false);\n      }\n    });\n  }, []);\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      {loggedIn ? <HomeScreen /> : <LoginScreen />}\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["classes/firebase.ts","components/GameListItem.tsx","classes/Game.ts","classes/utils.ts","components/GameList.tsx","components/MyAppBar.tsx","components/CreateTeamDisplay.tsx","components/CreateGame.tsx","components/HistoryItem.tsx","components/PlayGameTeam.tsx","components/RoundSummary.tsx","components/RoundTopBar.tsx","components/RoundTextField.tsx","components/RoundHistory.tsx","components/RoundPlayerInput.tsx","components/ScoreRound.tsx","components/PlayGame.tsx","components/HomeScreen.tsx","components/SignIn.tsx","components/SignUp.tsx","components/LoginScreen.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","GameListItem","game","onClick","useState","Date","date","name","gameName","isFavorite","setIsFavorite","useEffect","ref","id","on","snapshot","val","ListItem","key","button","ListItemText","primary","secondary","toDateString","ListItemSecondaryAction","edge","checked","onChange","value","gameId","update","console","log","checkedIcon","style","color","icon","Game","teams","this","Team","score","history","TeamHistory","addScore","String","pastScores","push","indexOfScore","splice","updatedScore","totalScore","forEach","convertedScore","Number","Round","index","scoreString","convertGame","defaultState","useStyles","makeStyles","theme","createStyles","spinner","display","marginLeft","spacing","alignItems","justifyContent","minHeight","GameList","startGame","classes","games","setGames","gamesHaveLoaded","setGamesHaveLoaded","userHasNoGames","setUserHasNoGames","rootRef","usersRef","child","auth","currentUser","uid","gamesRef","orderByChild","a","count","newGames","snap","once","set","newGame","numChildren","reverse","List","component","map","Divider","Typography","variant","padding","className","root","flexGrow","menuButton","marginRight","title","MyAppBar","showBackArrow","onBackArrowClick","React","anchorEl","setAnchorEl","AppBar","Toolbar","IconButton","aria-label","onMenuButtonClick","event","currentTarget","keepMounted","open","Boolean","onClose","MenuItem","signOut","card","text","CreateTeamDisplay","team","onDelete","Paper","Grid","container","justify","item","xs","paddingTop","paddingBottom","textAlign","paper","marginTop","flexDirection","avatar","margin","backgroundColor","palette","main","form","width","submit","teamState","CreateGame","setGameName","setTeams","currentTeam","setCurrentTeam","isErrorTeams","setIsErrorTeams","addTeam","newTeam","onSubmit","preventDefault","length","userId","newGameRef","now","Map","Object","fromEntries","onDeleteTeam","teamName","newTeams","indexToRemove","findIndex","maxWidth","CssBaseline","TextField","required","fullWidth","label","target","autoFocus","autoComplete","onKeyPress","error","Button","type","editButton","clearIconContainer","clearIcon","HistoryItem","isEditing","teamIndex","teamHistory","teamScore","stopPropagation","newHistory","newScore","removeHistoryItem","fontSize","PlayGameTeam","updatePoints","cardExpanded","setCardExpanded","scoreChange","setScoreChange","setIsEditing","isPositive","isNaN","inputMode","e","historyIndex","RoundSummary","round","backToEdit","confirmRound","alignContent","RoundTopBar","currentTeamIndex","onPreviousPlayer","onNextPlayer","showSummary","exitRound","paddingLeft","noWrap","paddingRight","RoundTextField","textField","setScore","inputRef","keyPressed","RoundHistory","historyScore","RoundPlayerInput","ScoreRound","applyRound","setCurrentTeamIndex","setRound","isShowingSummary","setIsShowingSummary","createRef","isNegative","prevRound","setValue","prevIndex","current","focus","PlayGame","props","setGame","isScoringRound","setIsScoringRound","addGameButton","position","bottom","right","HomeScreen","isCreatingGame","setIsCreatingGame","isPlayingGame","setIsPlayingGame","gameState","gameToPlay","setGameToPlay","Container","size","Copyright","align","getFullYear","SignIn","toggle","username","setUsername","password","setPassword","rememberMe","setRememberMe","incorrectPassword","setIncorrectPassword","Avatar","signInWithEmailAndPassword","catch","errorCode","code","message","toLowerCase","FormHelperText","FormControlLabel","control","Checkbox","Link","href","provider","GoogleAuthProvider","signInWithPopup","then","user","email","credential","Box","mt","SignUp","setEmail","hasError","setHasError","errorMessage","setErrorMessage","createUserWithEmailAndPassword","LoginScreen","isSignUp","setIsSignUp","toggleSignUp","App","darkState","palletType","loggedIn","setLoggedIn","darkTheme","createMuiTheme","onAuthStateChanged","ThemeProvider","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b4c932e4.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB2aJwBVVsCSVzX_MnSHAbO5gXgn59CeXs\",\r\n  authDomain: \"scoregames-c0233.firebaseapp.com\",\r\n  databaseURL: \"https://scoregames-c0233.firebaseio.com\",\r\n  projectId: \"scoregames-c0233\",\r\n  storageBucket: \"scoregames-c0233.appspot.com\",\r\n  messagingSenderId: \"475132375224\",\r\n  appId: \"1:475132375224:web:206d8be3fc01e8faa6044d\",\r\n  measurementId: \"G-RQT21T265Y\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nconst database = firebase.database()\r\n\r\nexport default firebase\r\n\r\n\r\n\r\n\r\nexport function firebaseUpdateIsFavorite(value: boolean, gameId: string) {\r\n  database.ref(\"games/\" + gameId).update({\r\n    isFavorite: value\r\n  }, () => {\r\n    console.log(\"Favorite updated\")\r\n  })\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport Game from \"../classes/Game\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport StarBorder from \"@material-ui/icons/StarBorder\";\r\nimport CheckBox from \"@material-ui/core/Checkbox\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport firebase, { firebaseUpdateIsFavorite } from \"../classes/firebase\";\r\n\r\ninterface Props {\r\n  game: Game;\r\n  onClick: Function;\r\n}\r\n\r\n\r\nconst GameListItem = ({ game, onClick }: Props) => {\r\n\r\n  // state to keep track of\r\n  const [date] = useState(new Date(game.date));\r\n  const [gameName] = useState(game.name);\r\n  const [isFavorite, setIsFavorite] = useState(game.isFavorite);\r\n\r\n  const starClicked = () => {\r\n    firebaseUpdateIsFavorite(!isFavorite, game.id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    firebase.database().ref(`games/${game.id}/isFavorite`).on(\"value\", snapshot => {\r\n      setIsFavorite(snapshot.val())\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <ListItem\r\n      key={game.id}\r\n      button\r\n      onClick={() => {\r\n        onClick(game)\r\n      }}\r\n    >\r\n      <ListItemText primary={gameName} secondary={date.toDateString()} />\r\n\r\n      <ListItemSecondaryAction>\r\n        <CheckBox\r\n          edge=\"end\"\r\n          checked={isFavorite}\r\n          onChange={starClicked}\r\n          checkedIcon={<StarIcon style={{ color: \"#FFDF00\" }} />}\r\n          icon={<StarBorder />}\r\n        />\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default GameListItem;\r\n","\r\n\r\nexport default class Game {\r\n  id: string\r\n  date: number\r\n  name: string\r\n  teams: Array<Team>\r\n  isFavorite: boolean\r\n\r\n  constructor(id: string, date: number, name: string ,teams: Array<Team>, isFavorite: boolean = false) {\r\n    this.id = id\r\n    this.date = date\r\n    this.name = name\r\n    this.teams = teams\r\n    this.isFavorite = isFavorite\r\n  }\r\n\r\n  tempGame(): Game {\r\n    return new Game(this.id, this.date, this.name, this.teams, this.isFavorite)\r\n  }\r\n}\r\n\r\nexport class Team {\r\n  name: string\r\n  score: number\r\n  history: TeamHistory\r\n\r\n  constructor(name: string, score: number = 0, history: TeamHistory = new TeamHistory()) {\r\n    this.name = name\r\n    this.score = score\r\n    this.history = history\r\n  }\r\n\r\n\r\n  addScore(score: number) {\r\n    this.score += score\r\n\r\n    //update history\r\n    if (score > 0) {\r\n      this.history.addScore(\"+\" + String(score))\r\n    } \r\n    else {\r\n      this.history.addScore(String(score))\r\n    }\r\n  }\r\n\r\n  createTeamForFirebase(): Team {\r\n    return new Team(this.name,this.score,this.history)\r\n  }\r\n}\r\n\r\nexport class TeamHistory {\r\n  pastScores: Array<string>\r\n\r\n  constructor(pastScores: Array<string> = []) {\r\n    \r\n    this.pastScores = pastScores\r\n  }\r\n\r\n  addScore(score: string) {\r\n    this.pastScores.push(score)\r\n  }\r\n\r\n  removeScore(indexOfScore: number) {\r\n    this.pastScores.splice(indexOfScore, 1)\r\n  }\r\n\r\n  editScore(indexOfScore: number, updatedScore: string) {\r\n    this.pastScores[indexOfScore] = updatedScore\r\n  }\r\n\r\n  calcTotalScore() : number {\r\n    let totalScore = 0\r\n\r\n    this.pastScores.forEach(score => {\r\n      let convertedScore = Number(score)\r\n      totalScore = totalScore + convertedScore\r\n    })\r\n\r\n    return totalScore\r\n  }\r\n}\r\n\r\nexport class Round {\r\n  teams: Array<string>;\r\n\r\n  constructor(teams: Array<string>) {\r\n    this.teams = teams;\r\n  }\r\n\r\n  setValue(index: number, scoreString: string) {\r\n    this.teams[index] = scoreString;\r\n  }\r\n\r\n  getValueAtIndex(index: number) : string {\r\n    return this.teams[index]\r\n  }\r\n}","import Game, { Team } from \"./Game\";\r\nimport * as firebase from 'firebase';\r\n\r\nexport function convertGameList(snapshot: firebase.database.DataSnapshot): Array<Game> {\r\n  let games: Array<Game> = []\r\n\r\n  snapshot.forEach(snapshot => {\r\n    const game = convertGame(snapshot)\r\n    games.push(game)\r\n  });\r\n\r\n\r\n\r\n  return games\r\n}\r\n\r\nexport function convertGame(snapshot: firebase.database.DataSnapshot): Game {\r\n  const game = snapshot.val()\r\n  const id = game.id as string || \"\";\r\n  const date = game.date as number || 0;\r\n  const name = game.name as string || \"\";\r\n  const teams = game.teams as Array<Team> || null;\r\n  const isFavorite = game.isFavorite as boolean || false;\r\n\r\n  return new Game(id, date, name, teams, isFavorite)\r\n}\r\n\r\n\r\n","import React, { ReactElement, useState, useEffect } from \"react\";\r\nimport Game from \"../classes/Game\";\r\nimport GameListItem from \"./GameListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport firebase from \"../classes/firebase\";\r\nimport { convertGame } from \"../classes/utils\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\n\r\n// const mockData1 = new Game(\"asdfasdf1\", 2342314234, \"Name 1\", [\r\n//   new Team(\"bob\", 500),\r\n// ]);\r\n// const mockData2 = new Game(\"asdfasdf2\", 2342314234, \"Name 1\", [\r\n//   new Team(\"bob\", 500),\r\n// ]);\r\n// const mockData3 = new Game(\"asdfasdf3\", 2342314234, \"Name 1\", [\r\n//   new Team(\"bob\", 500),\r\n// ]);\r\n// const mockData4 = new Game(\"asdfasdf4\", 2342314234, \"Name 1\", [\r\n//   new Team(\"bob\", 500),\r\n// ]);\r\n// const mockData5 = new Game(\"asdfasdf5\", 2342314234, \"Name 1\", [\r\n//   new Team(\"bob\", 500),\r\n// ]);\r\n\r\ninterface Props {\r\n  startGame: Function;\r\n}\r\n\r\nconst database = firebase.database();\r\nvar defaultState: Array<Game> = [\r\n  // mockData1,\r\n  // mockData2,\r\n  // mockData3,\r\n  // mockData4,\r\n  // mockData5,\r\n];\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    spinner: {\r\n      display: \"flex\",\r\n      \"& > * + *\": {\r\n        marginLeft: theme.spacing(2),\r\n      },\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      minHeight: \"200px\",\r\n    },\r\n  })\r\n);\r\n\r\nexport default function GameList({startGame}: Props): ReactElement {\r\n  const classes = useStyles();\r\n  const [games, setGames] = useState(defaultState);\r\n  const [gamesHaveLoaded, setGamesHaveLoaded] = useState(false);\r\n  const [userHasNoGames, setUserHasNoGames] = useState(false);\r\n\r\n  // database references\r\n  const rootRef = database.ref();\r\n  const usersRef = rootRef.child(\"/Users/\" + firebase.auth().currentUser?.uid);\r\n  const gamesRef = rootRef.child(\"/games\");\r\n  //const gameCodesRef = rootRef.child(\"/GameCodes\");\r\n\r\n  // When the component first loads run this\r\n  useEffect(() => {\r\n    // Fetch all of the games from firebase\r\n    usersRef\r\n      .child(\"/games\")\r\n      .orderByChild(\"date\")\r\n      .on(\"value\", async (snapshot) => {\r\n\r\n        // user has no games.\r\n        if (snapshot.val() === null) {\r\n          setGamesHaveLoaded(false);\r\n          setUserHasNoGames(true);\r\n\r\n          return;\r\n        }\r\n\r\n        var count = 0;\r\n\r\n        const newGames: Array<Game> = [];\r\n\r\n        snapshot.forEach((snap) => {\r\n          gamesRef.child(\"/\" + snap.key).once(\"value\", (game) => {\r\n            if (game.val() === null) {\r\n              // Game Id not found lets clean up the database a little and delete the ones that the game does not exist on.\r\n              usersRef.child(\"/games/\" + snap.key).set(null);\r\n            } else {\r\n              //game.val() contains a single game.\r\n              const newGame = convertGame(game);\r\n              newGames.push(newGame);\r\n              count = count + 1;\r\n              if (count === snapshot.numChildren()) {\r\n                newGames.reverse();\r\n                setGames(newGames);\r\n                setGamesHaveLoaded(true);\r\n                setUserHasNoGames(false);\r\n              }\r\n            }\r\n          });\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {gamesHaveLoaded ? (\r\n        <List component=\"nav\">\r\n          {games.map((game, index) => (\r\n            <div key={game.id}>\r\n              {index !== 0 && <Divider />}\r\n              <GameListItem onClick={startGame} game={game} />\r\n            </div>\r\n          ))}\r\n        </List>\r\n      ) : userHasNoGames ? (\r\n        <Typography variant=\"subtitle1\" style={{ padding: \"20px\" }}>\r\n          No games here... You should make one!\r\n        </Typography>\r\n      ) : (\r\n        <div className={classes.spinner}>\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport firebase from \"../classes/firebase\"\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\ninterface Props {\r\n  title: string;\r\n  showBackArrow: boolean;\r\n  onBackArrowClick: Function;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  })\r\n);\r\n\r\nconst MyAppBar = ({ title, showBackArrow, onBackArrowClick }: Props) => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\r\n\r\n  const signOut = () => {\r\n    firebase.auth().signOut()\r\n  }\r\n\r\n  const onMenuButtonClick = () => {\r\n\r\n  }\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            className={classes.menuButton}\r\n            onClick={() => (showBackArrow ? onBackArrowClick() : onMenuButtonClick())}\r\n          >\r\n            {showBackArrow ? <ArrowBackIosIcon /> : <MenuIcon />}\r\n          </IconButton>\r\n\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            {title}\r\n          </Typography>\r\n\r\n          <IconButton color=\"inherit\" edge=\"end\" onClick={handleClick}>\r\n            <AccountCircle />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"accountMenu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem onClick={signOut}>Sign Out</MenuItem>\r\n          </Menu>\r\n        </Toolbar>\r\n      </AppBar>\r\n      \r\n      <Toolbar/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyAppBar;\r\n","import React from \"react\";\r\nimport { Team } from \"../classes/Game\";\r\nimport {\r\n  Typography,\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\ninterface Props {\r\n  team: Team;\r\n  onDelete: Function;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    card: {},\r\n    text: {},\r\n  })\r\n);\r\n\r\nconst CreateTeamDisplay = ({ team, onDelete }: Props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.card} variant=\"outlined\">\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid item xs={8}>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            style={{ padding: \"5px\", paddingTop: \"20px\", paddingBottom: \"20px\" }}\r\n          >\r\n            {team.name}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <IconButton onClick={() => onDelete(team.name)}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CreateTeamDisplay;\r\n","import React, { useState, FormEvent } from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport { Theme } from \"@material-ui/core/styles/createMuiTheme\";\r\nimport createStyles from \"@material-ui/core/styles/createStyles\";\r\nimport Game, { Team } from \"../classes/Game\";\r\nimport Container from \"@material-ui/core/Container/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CreateTeamDisplay from \"./CreateTeamDisplay\";\r\nimport firebase from \"../classes/firebase\"\r\n\r\ninterface Props {\r\n  startGame: Function;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      justifyContent: \"center\",\r\n      textAlign: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    paper: {\r\n      marginTop: theme.spacing(4),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(2),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: \"100%\", // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  })\r\n);\r\n\r\nconst teamState: Array<Team> = [];\r\n\r\nconst CreateGame = ({ startGame }: Props) => {\r\n  const classes = useStyles();\r\n\r\n  const [gameName, setGameName] = useState(\"\");\r\n  const [teams, setTeams] = useState(teamState);\r\n  const [currentTeam, setCurrentTeam] = useState(\"\");\r\n  const [isErrorTeams, setIsErrorTeams] = useState(false)\r\n\r\n  const onGameNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setGameName(event.target.value);\r\n  };\r\n\r\n  const onCurrentTeamChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCurrentTeam(event.target.value);\r\n  };\r\n\r\n  const addTeam = () => {\r\n    if (currentTeam === \"\") {\r\n      return;\r\n    }\r\n\r\n    const newTeam = new Team(currentTeam);\r\n    setTeams([...teams, newTeam]);\r\n    setCurrentTeam(\"\");\r\n  };\r\n\r\n  const onSubmit = async (event: FormEvent) => {\r\n    event.preventDefault();\r\n\r\n    if (teams.length < 1) {\r\n      console.log(\"Need at least one team to continue\")\r\n\r\n      // TODO add error handling/message to\r\n      setIsErrorTeams(true)\r\n      return\r\n    }\r\n\r\n    const userId = firebase.auth().currentUser?.uid\r\n    const newGameRef = (await firebase.database().ref(\"/games\").push())\r\n    \r\n    const newGame = new Game(newGameRef.key || String(Date.now()), Date.now(), gameName, teams)\r\n\r\n    newGameRef.set(newGame)\r\n    let update = new Map();\r\n    update.set(newGameRef.key, true)\r\n\r\n    firebase\r\n      .database()\r\n      .ref(\"/Users/\" + userId + \"/games\")\r\n      .update(Object.fromEntries(update), () => {\r\n        startGame(newGame);\r\n      });\r\n  };\r\n\r\n  const onDeleteTeam = (teamName: string) => {\r\n    console.log(\"deleteingTeam\");\r\n    const newTeams = [...teams];\r\n    const indexToRemove = newTeams.findIndex(team => team.name === teamName)\r\n    newTeams.splice(indexToRemove, 1)\r\n    setTeams(newTeams);\r\n  };\r\n\r\n  const keyPressed = (event:  React.KeyboardEvent) => {\r\n    if(event.key === 'Enter') {\r\n      event.preventDefault()\r\n      addTeam()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\">\r\n            {gameName !== \"\" ? gameName : \"New Game\"}\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={onSubmit}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              label=\"Game Name\"\r\n              name=\"gameName\"\r\n              value={gameName}\r\n              onChange={onGameNameChange}\r\n              autoFocus\r\n            />\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography component=\"p\" variant=\"h6\">\r\n                  Teams/Players\r\n                </Typography>\r\n              </Grid>\r\n\r\n              {teams.map((team, index) => (\r\n                <Grid item xs={6} key={index + team.name}>\r\n                  <CreateTeamDisplay team={team} onDelete={onDeleteTeam} />\r\n                </Grid>\r\n              ))}\r\n\r\n              <Grid item xs={12}>\r\n                {teams.length === 0 && (\r\n                  <Typography\r\n                    component=\"p\"\r\n                    variant=\"subtitle2\"\r\n                    color=\"textSecondary\"\r\n                  >\r\n                    Teams will show up here once added\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={8}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    label=\"Team Name\"\r\n                    value={currentTeam}\r\n                    onChange={onCurrentTeamChange}\r\n                    autoComplete=\"current-password\"\r\n                    onKeyPress={keyPressed}\r\n                    error={isErrorTeams}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <Button\r\n                    fullWidth\r\n                    variant=\"text\"\r\n                    color=\"secondary\"\r\n                    className={classes.submit}\r\n                    onClick={addTeam}\r\n                  >\r\n                    Add Team\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Create Game\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateGame;\r\n","import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n  Paper,\r\n  Grid,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport firebase from \"../classes/firebase\"\r\nimport { TeamHistory } from \"../classes/Game\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      marginTop: theme.spacing(2),\r\n      textAlign: \"center\",\r\n      padding: \"10px\",\r\n    },\r\n    teamName: {\r\n      textAlign: \"left\",\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n    history: {\r\n      padding: \"5px\",\r\n      margin: \"5px\",\r\n    },\r\n    editButton: {\r\n      textAlign: \"right\",\r\n    },\r\n    clearIconContainer: {},\r\n    clearIcon: {\r\n      padding: \"0\",\r\n      margin: \"0\",\r\n    },\r\n  })\r\n);\r\n\r\ninterface Props {\r\n  isEditing: boolean;\r\n  score: string;\r\n  index: number;\r\n  teamIndex: number;\r\n  teamHistory: TeamHistory;\r\n  teamScore: number;\r\n  gameId: string;\r\n}\r\n\r\nconst HistoryItem = ({ isEditing, score, index, teamIndex, teamHistory, teamScore, gameId }: Props) => {\r\n  const classes = useStyles();\r\n\r\n  const removeHistoryItem = () => {\r\n    if (!isEditing) {\r\n      return;\r\n    }\r\n\r\n    const newHistory: Array<string> = [...teamHistory.pastScores];\r\n    newHistory.splice(index, 1)\r\n    const newScore = teamScore - Number(score)\r\n\r\n    console.log(\"current team history\", teamHistory)\r\n    console.log(\"current team index \", teamIndex)\r\n\r\n    firebase\r\n      .database()\r\n      .ref(\"/games/\" + gameId + \"/teams/\" + teamIndex)\r\n      .update({\r\n        score: newScore,\r\n        history: {\r\n          pastScores: newHistory,\r\n        },\r\n      }, () => {\r\n        console.log(\"history removed\")\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Paper variant=\"outlined\" className={classes.history}>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        {isEditing && (\r\n          <Grid item xs={12} className={classes.clearIconContainer}>\r\n            <IconButton\r\n              onClick={(event) => {\r\n                event.stopPropagation();\r\n                removeHistoryItem();\r\n              }}\r\n              className={classes.clearIcon}\r\n            >\r\n              <ClearIcon fontSize=\"small\" className={classes.clearIcon} />\r\n            </IconButton>\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={12}>\r\n          {score}\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default HistoryItem;\r\n","import React, { FormEvent, useState } from \"react\";\r\nimport Game, { Team } from \"../classes/Game\";\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n  Grid,\r\n  Typography,\r\n  IconButton,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport firebase from \"../classes/firebase\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport HistoryItem from \"./HistoryItem\";\r\n\r\ninterface Props {\r\n  team: Team;\r\n  updatePoints: Function;\r\n  index: number;\r\n  gameId: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      marginTop: theme.spacing(2),\r\n      textAlign: \"center\",\r\n      padding: \"10px\",\r\n    },\r\n    teamName: {\r\n      textAlign: \"left\",\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n    history: {\r\n      padding: \"5px\",\r\n      margin: \"5px\",\r\n    },\r\n    editButton: {\r\n      textAlign: \"right\",\r\n    },\r\n    clearIconContainer: {},\r\n    clearIcon: {\r\n      padding: \"0\",\r\n      margin: \"0\",\r\n    },\r\n  })\r\n);\r\n\r\nconst PlayGameTeam = ({ team, updatePoints, index, gameId }: Props) => {\r\n  const classes = useStyles();\r\n\r\n  const [cardExpanded, setCardExpanded] = useState(false);\r\n  const [scoreChange, setScoreChange] = useState(\"\");\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const expandCard = () => {\r\n    setCardExpanded(!cardExpanded);\r\n  };\r\n\r\n  const onInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (isNaN(Number(event.target.value))) {\r\n      return;\r\n    }\r\n    setScoreChange(event.target.value);\r\n  };\r\n\r\n  // const updatePoints = () => {\r\n  //   // update the model with a new instance\r\n  //   const newTeam = team.createTeamForFirebase()\r\n  //   newTeam.addScore(Number(scoreChange))\r\n\r\n  //   firebase.database().ref(\"/games/\" + gameId + \"/\" + index).update(newTeam)\r\n\r\n  // }\r\n\r\n  const addScore = (isPositive: boolean) => {\r\n    if (scoreChange === \"\") {\r\n      return;\r\n    }\r\n\r\n    \r\n\r\n    if (isPositive) {\r\n      updatePoints(Number(scoreChange), index);\r\n    } else {\r\n      updatePoints(Number(\"-\" + scoreChange), index);\r\n    }\r\n\r\n    setScoreChange(\"\");\r\n    setCardExpanded(false);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paper} variant=\"outlined\" onClick={expandCard}>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h6\" className={classes.teamName}>\r\n            {team.name}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h5\">{team.score}</Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <IconButton>\r\n            <ExpandMoreIcon />\r\n          </IconButton>\r\n        </Grid>\r\n\r\n        {cardExpanded && (\r\n          <>\r\n            <Grid item xs={3}>\r\n              <IconButton onClick={() => addScore(false)}>\r\n                <RemoveIcon color=\"secondary\" />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                type=\"tel\"\r\n                label=\"+ or - Score\"\r\n                name=\"gameName\"\r\n                value={scoreChange}\r\n                onChange={onInputChange}\r\n                autoFocus\r\n                inputMode=\"numeric\"\r\n                onClick={(e) => e.stopPropagation()}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <IconButton onClick={() => addScore(true)}>\r\n                <AddIcon color=\"primary\" />\r\n              </IconButton>\r\n            </Grid>\r\n\r\n            {team.history &&\r\n              team.history.pastScores.map((score, historyIndex) => {\r\n                return (\r\n                  <HistoryItem\r\n                    key={\"indexof\" + score + historyIndex}\r\n                    isEditing={isEditing}\r\n                    score={score}\r\n                    index={historyIndex}\r\n                    teamIndex={index}\r\n                    teamScore={team.score}\r\n                    teamHistory={team.history}\r\n                    gameId={gameId}\r\n                  />\r\n                );\r\n              })}\r\n\r\n            <Grid item xs={12} className={classes.editButton}>\r\n              <IconButton\r\n                onClick={(event) => {\r\n                  event.stopPropagation();\r\n                  setIsEditing(!isEditing);\r\n                }}\r\n              >\r\n                <EditIcon />\r\n              </IconButton>\r\n            </Grid>\r\n          </>\r\n        )}\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default PlayGameTeam;\r\n","import React from 'react'\r\nimport { Grid, Typography, Paper, Button } from '@material-ui/core'\r\nimport Game, { Round } from '../classes/Game'\r\n\r\ninterface Props {\r\n    round: Round;\r\n    game: Game;\r\n    backToEdit: Function;\r\n    confirmRound: Function;\r\n}\r\n\r\nconst RoundSummary = ({ round, game, backToEdit, confirmRound }: Props) => {\r\n    return (\r\n        \r\n        <Grid\r\n          container\r\n          justify=\"center\"\r\n          alignContent=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n          style={{textAlign: \"center\", padding: \"20px\"}}\r\n        >\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h5\">Summary</Typography>\r\n          </Grid>\r\n          {game.teams.map((team, index) => (\r\n            <Grid item xs={4} key={team.name + index}>\r\n              <Paper variant=\"outlined\">\r\n                <Grid\r\n                  container\r\n                  justify=\"center\"\r\n                  alignContent=\"center\"\r\n                  alignItems=\"center\"\r\n                  spacing={2}\r\n                >\r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"h6\">{team.name}</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"subtitle1\">\r\n                      {round.teams[index]}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n          ))}\r\n\r\n          <Grid container style={{paddingTop: \"20px\"}}>\r\n          <Grid item xs={6} style={{textAlign: \"left\"}}>\r\n            <Button variant=\"outlined\" color=\"secondary\" onClick={() => backToEdit()}>Edit</Button>\r\n          </Grid>\r\n          <Grid item xs={6} style={{textAlign: \"right\"}}>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={() => confirmRound(round)}>Confirm</Button>\r\n          </Grid>\r\n          </Grid>\r\n          \r\n        </Grid>  \r\n            )\r\n}\r\n\r\nexport default RoundSummary\r\n","import React from \"react\";\r\nimport { Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport Game from \"../classes/Game\";\r\n\r\ninterface Props {\r\n  currentTeamIndex: number;\r\n  onPreviousPlayer: Function;\r\n  game: Game;\r\n  onNextPlayer: Function;\r\n  showSummary: Function;\r\n  exitRound: Function;\r\n}\r\n\r\nconst RoundTopBar = ({\r\n  currentTeamIndex,\r\n  onPreviousPlayer,\r\n  game,\r\n  onNextPlayer,\r\n  showSummary,\r\n  exitRound,\r\n}: Props) => {\r\n  return (\r\n    <Grid\r\n      container\r\n      justify=\"center\"\r\n      alignContent=\"center\"\r\n      alignItems=\"center\"\r\n      style={{ marginTop: \"10px\" }}\r\n    >\r\n      <Grid item xs={4}>\r\n        {currentTeamIndex > 0 ? (\r\n          <IconButton\r\n            style={{ paddingLeft: \"0\", marginLeft: \"0\" }}\r\n            onClick={() => onPreviousPlayer()}\r\n          >\r\n            <ArrowBackIosIcon />\r\n            <Typography noWrap>\r\n              {game.teams[currentTeamIndex - 1].name}\r\n            </Typography>\r\n          </IconButton>\r\n        ) : (\r\n          <IconButton\r\n            style={{ paddingLeft: \"0\", marginLeft: \"0\" }}\r\n            onClick={() => exitRound()}\r\n          >\r\n            <ArrowBackIosIcon />\r\n            <Typography noWrap>Back</Typography>\r\n          </IconButton>\r\n        )}\r\n      </Grid>\r\n      <Grid item xs={4} style={{ textAlign: \"center\" }}>\r\n        <Typography variant=\"h5\">\r\n          {game.teams[currentTeamIndex].name}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={4} style={{ textAlign: \"right\" }}>\r\n        {currentTeamIndex < game.teams.length - 1 ? (\r\n          <IconButton\r\n            style={{ paddingRight: \"0\", marginRight: \"0\" }}\r\n            onClick={() => onNextPlayer()}\r\n          >\r\n            <Typography noWrap>\r\n              {game.teams[currentTeamIndex + 1].name}\r\n            </Typography>\r\n            <ArrowForwardIosIcon />\r\n          </IconButton>\r\n        ) : (\r\n          <IconButton\r\n            style={{ paddingRight: \"0\", marginRight: \"0\" }}\r\n            onClick={() => showSummary()}\r\n          >\r\n            <Typography noWrap>Summary</Typography>\r\n            <ArrowForwardIosIcon />\r\n          </IconButton>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default RoundTopBar;\r\n","import React from \"react\";\r\nimport { Grid, IconButton, TextField } from \"@material-ui/core\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Game from \"../classes/Game\";\r\n\r\ninterface Props {\r\n  game: Game;\r\n  score: string;\r\n  currentTeamIndex: number;\r\n\r\n  textField: React.RefObject<HTMLDivElement>;\r\n\r\n  onPreviousPlayer: Function;\r\n  onNextPlayer: Function;\r\n  showSummary: Function;\r\n  setScore: Function;\r\n}\r\n\r\nconst RoundTextField = ({\r\n  textField,\r\n  score,\r\n  setScore,\r\n  showSummary,\r\n  onNextPlayer,\r\n  game,\r\n  currentTeamIndex,\r\n}: Props) => {\r\n  const keyPressed = (event: React.KeyboardEvent) => {\r\n    if (event.key === \"Enter\") {\r\n      event.preventDefault();\r\n\r\n      if (currentTeamIndex === game.teams.length - 1) {\r\n        showSummary();\r\n      } else {\r\n        onNextPlayer();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onBackClick = () => {\r\n    if (currentTeamIndex + 1 === game.teams.length) {\r\n      showSummary(true);\r\n    } else {\r\n      onNextPlayer(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid container justify=\"center\" alignContent=\"center\" alignItems=\"center\">\r\n      <Grid item xs={3} style={{ textAlign: \"right\" }}>\r\n        <IconButton\r\n          onClick={onBackClick}\r\n        >\r\n          <RemoveIcon color=\"secondary\" />\r\n        </IconButton>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          inputRef={textField}\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          type=\"tel\"\r\n          label=\"Score this Round\"\r\n          value={score}\r\n          onChange={(event) => setScore(event.target.value)}\r\n          onKeyPress={(event) => keyPressed(event)}\r\n          autoFocus\r\n          inputMode=\"numeric\"\r\n          onClick={(e) => e.stopPropagation()}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={3} style={{ textAlign: \"left\" }}>\r\n        <IconButton\r\n          onClick={\r\n            currentTeamIndex + 1 === game.teams.length\r\n              ? () => showSummary()\r\n              : () => onNextPlayer()\r\n          }\r\n        >\r\n          <AddIcon color=\"primary\" />\r\n        </IconButton>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default RoundTextField;\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport HistoryItem from \"./HistoryItem\";\r\nimport Game from \"../classes/Game\";\r\n\r\ninterface Props {\r\n  game: Game;\r\n  currentTeamIndex: number;\r\n}\r\n\r\nconst RoundHistory = ({ game, currentTeamIndex }: Props) => {\r\n  return (\r\n    <Grid\r\n      container\r\n      justify=\"center\"\r\n      alignContent=\"center\"\r\n      alignItems=\"center\"\r\n      style={{\r\n        paddingLeft: \"0\",\r\n        paddingRight: \"0\",\r\n        marginLeft: \"0\",\r\n        marginRight: \"0\",\r\n      }}\r\n      spacing={0}\r\n    >\r\n      <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n        <Typography variant=\"subtitle1\">History</Typography>\r\n      </Grid>\r\n      {game.teams[currentTeamIndex].history &&\r\n        game.teams[currentTeamIndex].history.pastScores.map(\r\n          (historyScore, historyIndex) => {\r\n            return (\r\n              <HistoryItem\r\n                key={\r\n                  game.teams[currentTeamIndex].name +\r\n                  historyScore +\r\n                  historyIndex\r\n                }\r\n                isEditing={false}\r\n                score={historyScore}\r\n                index={historyIndex}\r\n                teamIndex={currentTeamIndex}\r\n                teamHistory={game.teams[currentTeamIndex].history}\r\n                teamScore={game.teams[currentTeamIndex].score}\r\n                gameId={game.id}\r\n              />\r\n            );\r\n          }\r\n        )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default RoundHistory;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport HistoryItem from \"./HistoryItem\";\r\nimport Game from \"../classes/Game\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport RoundTopBar from \"./RoundTopBar\";\r\nimport RoundTextField from \"./RoundTextField\";\r\nimport RoundHistory from \"./RoundHistory\";\r\n\r\ninterface Props {\r\n  currentTeamIndex: number;\r\n  game: Game;\r\n  score: string;\r\n\r\n  textField: React.RefObject<HTMLDivElement>;\r\n\r\n  onPreviousPlayer: Function;\r\n  onNextPlayer: Function;\r\n  showSummary: Function;\r\n  setScore: Function;\r\n  exitRound: Function;\r\n}\r\n\r\nconst RoundPlayerInput = ({\r\n  currentTeamIndex,\r\n  onPreviousPlayer,\r\n  onNextPlayer,\r\n  showSummary,\r\n  game,\r\n  score,\r\n  setScore,\r\n  textField,\r\n  exitRound,\r\n}: Props) => {\r\n  return (\r\n    <Grid\r\n      container\r\n      justify=\"center\"\r\n      alignContent=\"center\"\r\n      alignItems=\"center\"\r\n      style={{\r\n        paddingLeft: \"0\",\r\n        paddingRight: \"0\",\r\n        marginLeft: \"0\",\r\n        marginRight: \"0\",\r\n      }}\r\n      spacing={0}\r\n    >\r\n      {/* Top Bar containing buttons to go between players */}\r\n      <RoundTopBar\r\n        currentTeamIndex={currentTeamIndex}\r\n        onPreviousPlayer={onPreviousPlayer}\r\n        game={game}\r\n        onNextPlayer={onNextPlayer}\r\n        showSummary={showSummary}\r\n        exitRound={exitRound}\r\n      />\r\n\r\n      {/* Text Input Field and plus and minus buttons */}\r\n      <RoundTextField\r\n        game={game}\r\n        score={score}\r\n        currentTeamIndex={currentTeamIndex}\r\n        textField={textField}\r\n        onPreviousPlayer={onPreviousPlayer}\r\n        onNextPlayer={onNextPlayer}\r\n        showSummary={showSummary}\r\n        setScore={setScore}\r\n      />\r\n\r\n      {/* RoundHistory */}\r\n      <RoundHistory game={game} currentTeamIndex={currentTeamIndex}/>\r\n\r\n      {/* Next Player Button */}\r\n      <Grid item xs={12} style={{ textAlign: \"right\", paddingTop: \"40px\" }}>\r\n        {currentTeamIndex < game.teams.length - 1 ? (\r\n          <Button variant=\"outlined\" onClick={() => onNextPlayer()}>\r\n            Next Player\r\n          </Button>\r\n        ) : (\r\n          <Button variant=\"outlined\" onClick={() => showSummary()}>\r\n            Summary\r\n          </Button>\r\n        )}\r\n      </Grid>\r\n\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default RoundPlayerInput;\r\n","import React, { useState, createRef } from \"react\";\r\nimport Game, { Round } from \"../classes/Game\";\r\nimport RoundSummary from \"./RoundSummary\";\r\nimport RoundPlayerInput from \"./RoundPlayerInput\";\r\n\r\ninterface Props {\r\n  game: Game;\r\n  applyRound: Function;\r\n  exitRound: Function;\r\n}\r\n\r\nconst ScoreRound = ({ game, applyRound, exitRound }: Props) => {\r\n  const [currentTeamIndex, setCurrentTeamIndex] = useState(0);\r\n  const [score, setScore] = useState(\"\");\r\n  const [round, setRound] = useState(new Round([]));\r\n  const [isShowingSummary, setIsShowingSummary] = useState(false);\r\n\r\n  const textField = createRef<HTMLDivElement>();\r\n\r\n  const onNextPlayer = (isNegative = false) => {\r\n    // add an item to the history\r\n    setRound((prevRound) => {\r\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n      let newScore = \"0\";\r\n\r\n      if (isNegative) {\r\n        if (score !== \"\") {\r\n          newScore = \"-\" + score;\r\n        } else {\r\n          newScore = \"0\";\r\n        }\r\n      } else {\r\n        if (score !== \"\") {\r\n          newScore = score;\r\n        } else {\r\n          newScore = \"0\";\r\n        }\r\n      }\r\n\r\n      prevRound.setValue(currentTeamIndex, newScore);\r\n\r\n      // Increase the current team index\r\n      setCurrentTeamIndex((prevIndex) => {\r\n        if (prevIndex === game.teams.length - 1) {\r\n          return prevIndex;\r\n        }\r\n\r\n        // fix the score\r\n        setScore(() => {\r\n          if (prevRound.teams[prevIndex + 1]) {\r\n            console.log(\"We have an item\", prevRound.teams[prevIndex + 1])\r\n            return String(Number(prevRound.teams[prevIndex + 1]));\r\n          }\r\n\r\n          return \"\";\r\n        });\r\n\r\n        return prevIndex + 1;\r\n      });\r\n      return prevRound;\r\n    });\r\n\r\n    textField.current?.focus();\r\n  };\r\n\r\n  const onPreviousPlayer = (isNegative = false) => {\r\n    // add item to history\r\n    setRound((prevRound) => {\r\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n      let newScore = \"0\";\r\n\r\n      if (isNegative) {\r\n        if (score !== \"\") {\r\n          newScore = \"-\" + score;\r\n        } else {\r\n          newScore = \"0\";\r\n        }\r\n      } else {\r\n        if (score !== \"\") {\r\n          newScore = score;\r\n        } else {\r\n          newScore = \"0\";\r\n        }\r\n      }\r\n\r\n      prevRound.setValue(currentTeamIndex, newScore);\r\n\r\n\r\n\r\n      // decrease the currentTeamIndex\r\n    setCurrentTeamIndex((prevIndex) => {\r\n      if (prevIndex <= 0) {\r\n        return prevIndex;\r\n      }\r\n\r\n      setScore(() => {\r\n        if (prevRound.teams[prevIndex - 1]) {\r\n          console.log(\"We have an item\", prevRound.teams[prevIndex - 1])\r\n          return prevRound.teams[prevIndex - 1];\r\n        }\r\n\r\n        return \"\";\r\n      });\r\n\r\n      return prevIndex - 1;\r\n    });\r\n\r\n    \r\n\r\n      return prevRound;\r\n    });\r\n\r\n    \r\n\r\n    textField.current?.focus();\r\n  };\r\n\r\n  const showSummary = (isNegative = false) => {\r\n    setRound((prevRound) => {\r\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n      let newScore = \"0\";\r\n\r\n      if (isNegative) {\r\n        if (score !== \"\") {\r\n          newScore = \"-\" + score;\r\n        } else {\r\n          newScore = \"0\";\r\n        }\r\n      } else {\r\n        if (score !== \"\") {\r\n          newScore = score;\r\n        } else {\r\n          newScore = \"0\";\r\n        }\r\n      }\r\n\r\n      prevRound.setValue(currentTeamIndex, newScore);\r\n      return prevRound;\r\n    });\r\n\r\n    setIsShowingSummary(() => true);\r\n  };\r\n\r\n  const backToEdit = () => {\r\n    setIsShowingSummary(() => false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        paddingLeft: \"0\",\r\n        paddingRight: \"0\",\r\n        marginLeft: \"0\",\r\n        marginRight: \"0\",\r\n      }}\r\n    >\r\n      {isShowingSummary ? (\r\n        <RoundSummary\r\n          round={round}\r\n          game={game}\r\n          backToEdit={backToEdit}\r\n          confirmRound={applyRound}\r\n        />\r\n      ) : (\r\n        <RoundPlayerInput\r\n          currentTeamIndex={currentTeamIndex}\r\n          game={game}\r\n          score={score}\r\n          textField={textField}\r\n          onPreviousPlayer={onPreviousPlayer}\r\n          onNextPlayer={onNextPlayer}\r\n          showSummary={showSummary}\r\n          setScore={setScore}\r\n          exitRound={exitRound}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScoreRound;\r\n\r\n/**\r\n * const onNextPlayer = () => {\r\n    saveToRound();\r\n    if (round.teams[currentTeamIndex + 1]) {\r\n      setScore(String(Number(round.teams[currentTeamIndex + 1])));\r\n    }\r\n\r\n    setCurrentTeamIndex(currentTeamIndex + 1);\r\n    textField.current?.focus();\r\n  };\r\n\r\n  const onPreviousPlayer = () => {\r\n    saveToRound();\r\n    if (round.teams[currentTeamIndex - 1]) {\r\n      setScore(String(Number(round.teams[currentTeamIndex - 1])));\r\n    }\r\n    setCurrentTeamIndex(currentTeamIndex - 1);\r\n\r\n    const node = textField.current;\r\n    if (node) {\r\n      node.focus();\r\n    }\r\n  };\r\n\r\n  const getScoreString = () => {\r\n    const value = Number(score);\r\n\r\n    if (value > 0) {\r\n      return \"+\" + value;\r\n    }\r\n\r\n    return score;\r\n  };\r\n\r\n  const saveToRound = () => {\r\n    const scoreString = getScoreString();\r\n\r\n    const newRound = new Round(round.teams);\r\n    newRound.setValue(currentTeamIndex, scoreString);\r\n\r\n    setScore(\"\");\r\n  };\r\n\r\n  const onSetScoreInputChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setScore(event.target.value);\r\n  };\r\n\r\n  const showSummary = () => {\r\n    saveToRound();\r\n    console.log(round);\r\n    setIsShowingSummary(true);\r\n  };\r\n\r\n  const backToEdit = () => {\r\n    setIsShowingSummary(false);\r\n\r\n    if (round.teams[currentTeamIndex]) {\r\n      setScore(String(Number(round.teams[currentTeamIndex])));\r\n    }\r\n  };\r\n\r\n  const makeNegative = () => {\r\n    setScore(\"-\" + score);\r\n\r\n    if (currentTeamIndex + 1 === game.teams.length) {\r\n      console.log(\"last one\");\r\n      showSummary();\r\n      return;\r\n    }\r\n\r\n    console.log(\"in make negative\", score);\r\n\r\n    onNextPlayer();\r\n  };\r\n */\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Game, { TeamHistory, Team, Round } from \"../classes/Game\";\r\nimport firebase from \"../classes/firebase\";\r\nimport { convertGame } from \"../classes/utils\";\r\nimport PlayGameTeam from \"./PlayGameTeam\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport ScoreRound from \"./ScoreRound\";\r\n\r\ninterface Props {\r\n  game: Game;\r\n}\r\n\r\nconst PlayGame = (props: Props) => {\r\n  const [game, setGame] = useState(props.game);\r\n  const [isScoringRound, setIsScoringRound] = useState(false);\r\n\r\n  const updatePoints = (score: number, index: number) => {\r\n    let newHistory: Array<string> = [];\r\n\r\n    if (game.teams[index].history) {\r\n      if (score > 0) {\r\n        newHistory = [\r\n          ...game.teams[index].history.pastScores,\r\n          \"+\" + String(score),\r\n        ];\r\n      } else {\r\n        newHistory = [...game.teams[index].history.pastScores, String(score)];\r\n      }\r\n    } else {\r\n      if (score > 0) {\r\n        newHistory.push(\"+\" + String(score));\r\n      } else {\r\n        newHistory.push(String(score));\r\n      }\r\n    }\r\n\r\n    const newScore = game.teams[index].score + score;\r\n\r\n    firebase\r\n      .database()\r\n      .ref(\"/games/\" + props.game.id + \"/teams/\" + index)\r\n      .update({\r\n        score: newScore,\r\n        history: {\r\n          pastScores: newHistory,\r\n        },\r\n      });\r\n  };\r\n\r\n  const applyRound = (round: Round) => {\r\n    round.teams.forEach((team, index) => {\r\n      updatePoints(Number(team), index)\r\n    })\r\n\r\n    setIsScoringRound(false);\r\n  }\r\n\r\n  const exitRound = () => {\r\n    setIsScoringRound(prevRound => false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const database = firebase.database();\r\n\r\n    database.ref(\"/games/\" + game.id).on(\"value\", (snapshot) => {\r\n      setGame(convertGame(snapshot));\r\n    });\r\n  }, []);\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      {!isScoringRound && (\r\n        <Grid\r\n          container\r\n          justify=\"center\"\r\n          alignContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs={6}>\r\n            <IconButton style={{ margin: \"0\", padding: \"0\" }}>\r\n              <SettingsIcon />\r\n            </IconButton>\r\n          </Grid>\r\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\r\n            <IconButton\r\n              style={{ marginRight: \"0\", paddingRight: \"0\" }}\r\n              onClick={() => setIsScoringRound(true)}\r\n            >\r\n              <Typography>Score Round</Typography>\r\n              <PlayArrowIcon />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n\r\n      {isScoringRound ? (\r\n        <ScoreRound game={game} applyRound={applyRound} exitRound={exitRound}/>\r\n      ) : (\r\n        game.teams.map((team, index) => (\r\n          <PlayGameTeam\r\n            team={team}\r\n            key={team.name + index}\r\n            index={index}\r\n            updatePoints={updatePoints}\r\n            gameId={props.game.id}\r\n          />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayGame;\r\n","import React, { useState } from \"react\";\r\nimport GameList from \"./GameList\";\r\nimport MyAppBar from \"./MyAppBar\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport Game, { Team, TeamHistory } from \"../classes/Game\";\r\nimport firebase from \"../classes/firebase\";\r\nimport CreateGame from \"./CreateGame\";\r\nimport Fab from \"@material-ui/core/Fab/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport { Theme } from \"@material-ui/core/styles/createMuiTheme\";\r\nimport createStyles from \"@material-ui/core/styles/createStyles\";\r\nimport PlayGame from \"./PlayGame\";\r\n\r\ninterface Props {}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {},\r\n    addGameButton: {\r\n      position: \"absolute\",\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nvar gameState: Game;\r\n\r\nconst HomeScreen = (props: Props) => {\r\n  const classes = useStyles();\r\n\r\n  const [isCreatingGame, setIsCreatingGame] = useState(false);\r\n  const [isPlayingGame, setIsPlayingGame] = useState(false);\r\n  const [gameToPlay, setGameToPlay] = useState(gameState);\r\n\r\n  const createGame = () => {\r\n    setIsCreatingGame(true);\r\n    setIsPlayingGame(false);\r\n  };\r\n\r\n  const startGame = (game: Game) => {\r\n    console.log(\"start game called\");\r\n    setGameToPlay(game);\r\n    setIsCreatingGame(false);\r\n    setIsPlayingGame(true);\r\n  };\r\n\r\n  const backToGameList = () => {\r\n    setIsCreatingGame(false);\r\n    setIsPlayingGame(false);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <MyAppBar\r\n        title={\r\n          isCreatingGame\r\n            ? \"Create Game\"\r\n            : isPlayingGame\r\n            ? gameToPlay.name\r\n            : \"My Games\"\r\n        }\r\n        showBackArrow={isPlayingGame || isCreatingGame ? true : false}\r\n        onBackArrowClick={backToGameList}\r\n      />\r\n      <Container>\r\n        {isCreatingGame && <CreateGame startGame={startGame} />}\r\n        {isPlayingGame && <PlayGame game={gameToPlay} />}\r\n        {isCreatingGame === false && isPlayingGame === false && (\r\n          <>\r\n            <GameList startGame={startGame} />\r\n            <div className={classes.addGameButton}>\r\n              <Fab\r\n                color=\"secondary\"\r\n                size=\"large\"\r\n                aria-label=\"add\"\r\n                onClick={createGame}\r\n              >\r\n                <AddIcon />\r\n              </Fab>\r\n            </div>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n\r\n// const buttonClick = async () => {\r\n//   let history = new TeamHistory([\"+500\", \"-200\", \"+5\", \"+200\", \"-299\"]);\r\n//   let team = new Team(\"Bob\", history.calcTotalScore(), history);\r\n\r\n//   let history2 = new TeamHistory([\"+50\", \"-20\", \"+50\", \"+204560\", \"-299\"]);\r\n//   let team2 = new Team(\"Billy\", history2.calcTotalScore(), history);\r\n//   let newGameRef = await firebase.database().ref(\"/games\").push();\r\n//   let game = new Game(\r\n//     newGameRef.key || \"123214\",\r\n//     Date.now(),\r\n//     \"Game created in code\",\r\n//     [team, team2]\r\n//   );\r\n\r\n//   newGameRef.set(game);\r\n//   let update = new Map();\r\n//   update.set(newGameRef.key, true);\r\n\r\n//   let userId = firebase.auth().currentUser?.uid;\r\n//   console.log(userId);\r\n//   console.log(update);\r\n//   firebase\r\n//     .database()\r\n//     .ref(\"/Users/\" + userId + \"/games\")\r\n//     .update(Object.fromEntries(update), () => {\r\n//       console.log(\"completed?\");\r\n//     });\r\n// };\r\n","import React, { FormEvent, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport firebase from \"../classes/firebase\";\r\nimport { FormHelperText } from \"@material-ui/core\";\r\nimport GoogleButton from \"react-google-button\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"© Copyright \"}\r\n      {new Date().getFullYear()}\r\n      {\" | Jordan Burdett\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(2),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  toggle: Function;\r\n}\r\n\r\nexport default function SignIn({ toggle }: Props) {\r\n  const classes = useStyles();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n  const [incorrectPassword, setIncorrectPassword] = useState(false);\r\n\r\n  const onSubmit = (event: FormEvent) => {\r\n    event.preventDefault();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(username, password)\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n\r\n        if (errorCode === \"auth/wrong-password\") {\r\n          setIncorrectPassword(true);\r\n        }\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const signInWithGoogle = () => {\r\n    let provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .then((user) => {\r\n        // This gives you a Google Access Token. You can use it to access the Google API.\r\n        console.log(user);\r\n        // ...\r\n      })\r\n      .catch(function (error) {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        var email = error.email;\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential;\r\n        // ...\r\n      });\r\n  };\r\n\r\n  const onUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUsername(event.target.value.toLowerCase());\r\n  };\r\n\r\n  const onPasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={onSubmit}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            value={username}\r\n            onChange={onUsernameChange}\r\n            autoFocus\r\n          />\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={onPasswordChange}\r\n            autoComplete=\"current-password\"\r\n          />\r\n\r\n          {incorrectPassword && (\r\n            <FormHelperText error={true}>* Incorrect Password</FormHelperText>\r\n          )}\r\n\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                value=\"remember\"\r\n                checked={rememberMe}\r\n                color=\"primary\"\r\n                onChange={() => setRememberMe(!rememberMe)}\r\n              />\r\n            }\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link onClick={() => toggle()} variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <GoogleButton\r\n                onClick={signInWithGoogle}\r\n                style={{ marginTop: \"50px\" }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, FormEvent } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport firebase from \"../classes/firebase\";\r\nimport { FormHelperText } from \"@material-ui/core\";\r\nimport GoogleButton from \"react-google-button\"\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"© Copyright \"}\r\n      {new Date().getFullYear()}\r\n      {\" | Jordan Burdett\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  toggle: Function;\r\n}\r\n\r\nexport default function SignUp({ toggle }: Props) {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n  const [hasError, setHasError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  \r\n  const onEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(event.target.value.toLowerCase());\r\n  };\r\n\r\n  const onPasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const signInWithGoogle = () => {\r\n    let provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n    firebase.auth().signInWithPopup(provider).then( user => {\r\n      // This gives you a Google Access Token. You can use it to access the Google API.\r\n      console.log(user)\r\n      // ...\r\n    }).catch(function(error) {\r\n      // Handle Errors here.\r\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n      var errorCode = error.code;\r\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n      var errorMessage = error.message;\r\n      // The email of the user's account used.\r\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n      var email = error.email;\r\n      // The firebase.auth.AuthCredential type that was used.\r\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n      var credential = error.credential;\r\n      // ...\r\n    });\r\n  }\r\n\r\n  const onSubmit = (event: FormEvent) => {\r\n    event.preventDefault();\r\n\r\n    // If I wanted to do a check to ensure that we have a strong password or something do it here\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .catch((error) => {\r\n        setErrorMessage(error.message);\r\n        setHasError(true);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={onSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                value={email}\r\n                onChange={onEmailChange}\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={password}\r\n                onChange={onPasswordChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    value=\"keepMeSignedIn\"\r\n                    color=\"primary\"\r\n                    checked={rememberMe}\r\n                    onChange={() => setRememberMe(!rememberMe)}\r\n                  />\r\n                }\r\n                label=\"Always remember me on this device?\"\r\n              />\r\n\r\n              {hasError && (\r\n                <FormHelperText error={true}>\r\n                  * {errorMessage}\r\n                </FormHelperText>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link onClick={() => toggle()} variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <GoogleButton onClick={signInWithGoogle} style={{marginTop: \"50px\"}}/>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport SignIn from \"./SignIn\";\r\nimport SignUp from \"./SignUp\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\ninterface Props {}\r\n\r\nconst LoginScreen = (props: Props) => {\r\n  const [isSignUp, setIsSignUp] = useState(false);\r\n\r\n  const toggleSignUp = () => {\r\n    setIsSignUp(!isSignUp);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Typography align=\"center\" variant=\"h3\" style={{marginTop: \"50px\"}}>\r\n          Score Games\r\n        </Typography>\r\n      </Container>\r\n      {isSignUp ? (\r\n        <SignUp toggle={toggleSignUp} />\r\n      ) : (\r\n        <SignIn toggle={toggleSignUp} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport DarkModeToggle from \"./DarkModeToggle\";\r\nimport HomeScreen from \"./HomeScreen\";\r\nimport LoginScreen from \"./LoginScreen\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction App() {\r\n  const [darkState, setDarkState] = useState(false);\r\n  const palletType = darkState ? \"dark\" : \"light\";\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n  const darkTheme = createMuiTheme({\r\n    palette: {\r\n      type: palletType,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged(function (user) {\r\n      if (user) {\r\n        setLoggedIn(true);\r\n      } else {\r\n        setLoggedIn(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      {loggedIn ? <HomeScreen /> : <LoginScreen />}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
{"version":3,"sources":["classes/firebase.ts","components/GameListItem.tsx","classes/Game.ts","classes/utils.ts","components/GameList.tsx","components/MyAppBar.tsx","components/CreateTeamDisplay.tsx","components/CreateGame.tsx","components/gamePlayScreen/gamePlayUtils/HistoryItem.tsx","components/gamePlayScreen/gamePlayUtils/PlayGameTeam.tsx","components/gamePlayScreen/scoreRoundScreen/RoundSummary.tsx","components/gamePlayScreen/gamePlayUtils/roundTopBar/RoundTopBar.tsx","components/gamePlayScreen/gamePlayUtils/RoundTextField.tsx","components/gamePlayScreen/gamePlayUtils/RoundHistory.tsx","components/gamePlayScreen/gamePlayUtils/RoundPlayerInput.tsx","components/gamePlayScreen/scoreRoundScreen/ScoreRound.tsx","components/gamePlayScreen/gamePlayUtils/roundTopBar/GameInfoLink.tsx","components/gamePlayScreen/PlayGame.tsx","components/HomeScreen.tsx","components/SignIn.tsx","components/SignUp.tsx","components/LoginScreen.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","GameListItem","game","onClick","useState","Date","date","name","gameName","isFavorite","setIsFavorite","useEffect","ref","id","on","snapshot","val","ListItem","key","button","ListItemText","primary","secondary","toDateString","ListItemSecondaryAction","edge","checked","onChange","value","gameId","update","console","log","checkedIcon","style","color","icon","Game","teams","this","Team","score","history","TeamHistory","addScore","String","pastScores","push","indexOfScore","splice","updatedScore","totalScore","forEach","convertedScore","Number","Round","index","scoreString","convertGame","defaultState","useStyles","makeStyles","theme","createStyles","spinner","display","marginLeft","spacing","alignItems","justifyContent","minHeight","GameList","startGame","classes","games","setGames","gamesHaveLoaded","setGamesHaveLoaded","userHasNoGames","setUserHasNoGames","rootRef","usersRef","child","auth","currentUser","uid","gamesRef","orderByChild","a","count","newGames","snap","once","set","newGame","numChildren","reverse","List","component","map","Divider","Typography","variant","padding","className","root","flexGrow","menuButton","marginRight","title","MyAppBar","showBackArrow","onBackArrowClick","React","anchorEl","setAnchorEl","AppBar","Toolbar","IconButton","aria-label","onMenuButtonClick","event","currentTarget","keepMounted","open","Boolean","onClose","MenuItem","signOut","card","text","CreateTeamDisplay","team","onDelete","Paper","Grid","container","justify","item","xs","paddingTop","paddingBottom","textAlign","paper","marginTop","flexDirection","avatar","margin","backgroundColor","palette","main","form","width","submit","teamState","CreateGame","setGameName","setTeams","currentTeam","setCurrentTeam","isErrorTeams","setIsErrorTeams","gameCode","setGameCode","gameCodeError","setGameCodeError","addTeam","newTeam","onSubmit","preventDefault","length","userId","newGameRef","now","Map","Object","fromEntries","onDeleteTeam","teamName","newTeams","indexToRemove","findIndex","maxWidth","CssBaseline","TextField","required","fullWidth","label","target","autoFocus","autoComplete","onKeyPress","error","Button","type","alignContent","marginBottom","equalTo","then","editButton","clearIconContainer","clearIcon","HistoryItem","isEditing","teamIndex","teamHistory","teamScore","stopPropagation","newHistory","newScore","removeHistoryItem","fontSize","PlayGameTeam","updatePoints","cardExpanded","setCardExpanded","scoreChange","setScoreChange","setIsEditing","isPositive","isNaN","inputMode","e","historyIndex","RoundSummary","round","backToEdit","confirmRound","RoundTopBar","currentTeamIndex","onPreviousPlayer","onNextPlayer","showSummary","exitRound","paddingLeft","noWrap","paddingRight","RoundTextField","textField","setScore","inputRef","keyPressed","RoundHistory","historyScore","RoundPlayerInput","ScoreRound","applyRound","setCurrentTeamIndex","setRound","isShowingSummary","setIsShowingSummary","createRef","isNegative","prevRound","setValue","prevIndex","current","focus","GameInfoLink","props","link","PlayGame","setGame","isScoringRound","setIsScoringRound","hasGameCode","setHasGameCode","newGameCode","setNewGameCode","newGameCodeError","setNewGameCodeError","onGameCodeChange","checkForValidCode","saveGameCode","code","testCode","prevGames","prev","NewGameButton","styled","Fab","HomeScreen","isCreatingGame","setIsCreatingGame","isPlayingGame","setIsPlayingGame","gameState","gameToPlay","setGameToPlay","Container","size","Copyright","align","getFullYear","SignIn","toggle","username","setUsername","password","setPassword","rememberMe","setRememberMe","incorrectPassword","setIncorrectPassword","Avatar","signInWithEmailAndPassword","catch","errorCode","message","toLowerCase","FormHelperText","FormControlLabel","control","Checkbox","Link","href","provider","GoogleAuthProvider","signInWithPopup","user","email","credential","Box","mt","SignUp","setEmail","hasError","setHasError","errorMessage","setErrorMessage","createUserWithEmailAndPassword","LoginScreen","isSignUp","setIsSignUp","toggleSignUp","App","darkState","palletType","loggedIn","setLoggedIn","darkTheme","createMuiTheme","onAuthStateChanged","ThemeProvider","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7cdf08b1.chunk.js","sourcesContent":["import firebase from 'firebase'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB2aJwBVVsCSVzX_MnSHAbO5gXgn59CeXs\",\n  authDomain: \"scoregames-c0233.firebaseapp.com\",\n  databaseURL: \"https://scoregames-c0233.firebaseio.com\",\n  projectId: \"scoregames-c0233\",\n  storageBucket: \"scoregames-c0233.appspot.com\",\n  messagingSenderId: \"475132375224\",\n  appId: \"1:475132375224:web:206d8be3fc01e8faa6044d\",\n  measurementId: \"G-RQT21T265Y\",\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst database = firebase.database()\n\nexport default firebase;\n\nexport function firebaseUpdateIsFavorite(value: boolean, gameId: string) {\n  database.ref(\"games/\" + gameId).update({\n    isFavorite: value\n  }, () => {\n    console.log(\"Favorite updated\")\n  })\n}","import React, { useState, useEffect } from \"react\";\nimport Game from \"../classes/Game\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport StarBorder from \"@material-ui/icons/StarBorder\";\nimport CheckBox from \"@material-ui/core/Checkbox\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport firebase, { firebaseUpdateIsFavorite } from \"../classes/firebase\";\n\ninterface Props {\n  game: Game;\n  onClick: Function;\n}\n\n\nconst GameListItem = ({ game, onClick }: Props) => {\n\n  // state to keep track of\n  const [date] = useState(new Date(game.date));\n  const [gameName] = useState(game.name);\n  const [isFavorite, setIsFavorite] = useState(game.isFavorite);\n\n  const starClicked = () => {\n    firebaseUpdateIsFavorite(!isFavorite, game.id);\n  };\n\n  useEffect(() => {\n    firebase.database().ref(`games/${game.id}/isFavorite`).on(\"value\", snapshot => {\n      setIsFavorite(snapshot.val())\n    })\n  }, []);\n\n  return (\n    <ListItem\n      key={game.id}\n      button\n      onClick={() => {\n        onClick(game)\n      }}\n    >\n      <ListItemText primary={gameName} secondary={date.toDateString()} />\n\n      <ListItemSecondaryAction>\n        <CheckBox\n          edge=\"end\"\n          checked={isFavorite}\n          onChange={starClicked}\n          checkedIcon={<StarIcon style={{ color: \"#FFDF00\" }} />}\n          icon={<StarBorder />}\n        />\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default GameListItem;\n","\n\nexport default class Game {\n  id: string\n  date: number\n  name: string\n  teams: Array<Team>\n  isFavorite: boolean\n\n  constructor(id: string, date: number, name: string ,teams: Array<Team>, isFavorite: boolean = false) {\n    this.id = id\n    this.date = date\n    this.name = name\n    this.teams = teams\n    this.isFavorite = isFavorite\n  }\n\n  tempGame(): Game {\n    return new Game(this.id, this.date, this.name, this.teams, this.isFavorite)\n  }\n}\n\nexport class Team {\n  name: string\n  score: number\n  history: TeamHistory\n\n  constructor(name: string, score: number = 0, history: TeamHistory = new TeamHistory()) {\n    this.name = name\n    this.score = score\n    this.history = history\n  }\n\n\n  addScore(score: number) {\n    this.score += score\n\n    //update history\n    if (score > 0) {\n      this.history.addScore(\"+\" + String(score))\n    } \n    else {\n      this.history.addScore(String(score))\n    }\n  }\n\n  createTeamForFirebase(): Team {\n    return new Team(this.name,this.score,this.history)\n  }\n}\n\nexport class TeamHistory {\n  pastScores: Array<string>\n\n  constructor(pastScores: Array<string> = []) {\n    \n    this.pastScores = pastScores\n  }\n\n  addScore(score: string) {\n    this.pastScores.push(score)\n  }\n\n  removeScore(indexOfScore: number) {\n    this.pastScores.splice(indexOfScore, 1)\n  }\n\n  editScore(indexOfScore: number, updatedScore: string) {\n    this.pastScores[indexOfScore] = updatedScore\n  }\n\n  calcTotalScore() : number {\n    let totalScore = 0\n\n    this.pastScores.forEach(score => {\n      let convertedScore = Number(score)\n      totalScore = totalScore + convertedScore\n    })\n\n    return totalScore\n  }\n}\n\nexport class Round {\n  teams: Array<string>;\n\n  constructor(teams: Array<string>) {\n    this.teams = teams;\n  }\n\n  setValue(index: number, scoreString: string) {\n    this.teams[index] = scoreString;\n  }\n\n  getValueAtIndex(index: number) : string {\n    return this.teams[index]\n  }\n}","import Game, { Team } from \"./Game\";\nimport * as firebase from 'firebase';\n\nexport function convertGameList(snapshot: firebase.database.DataSnapshot): Array<Game> {\n  let games: Array<Game> = []\n\n  snapshot.forEach(snapshot => {\n    const game = convertGame(snapshot)\n    games.push(game)\n  });\n\n\n\n  return games\n}\n\nexport function convertGame(snapshot: firebase.database.DataSnapshot): Game {\n  const game = snapshot.val()\n  const id = game.id as string || \"\";\n  const date = game.date as number || 0;\n  const name = game.name as string || \"\";\n  const teams = game.teams as Array<Team> || null;\n  const isFavorite = game.isFavorite as boolean || false;\n\n  return new Game(id, date, name, teams, isFavorite)\n}\n\n\n","import React, { ReactElement, useState, useEffect } from \"react\";\nimport Game from \"../classes/Game\";\nimport GameListItem from \"./GameListItem\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport firebase from \"../classes/firebase\";\nimport { convertGame } from \"../classes/utils\";\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\nimport { Typography } from \"@material-ui/core\";\n\n\n// const mockData1 = new Game(\"asdfasdf1\", 2342314234, \"Name 1\", [\n//   new Team(\"bob\", 500),\n// ]);\n// const mockData2 = new Game(\"asdfasdf2\", 2342314234, \"Name 1\", [\n//   new Team(\"bob\", 500),\n// ]);\n// const mockData3 = new Game(\"asdfasdf3\", 2342314234, \"Name 1\", [\n//   new Team(\"bob\", 500),\n// ]);\n// const mockData4 = new Game(\"asdfasdf4\", 2342314234, \"Name 1\", [\n//   new Team(\"bob\", 500),\n// ]);\n// const mockData5 = new Game(\"asdfasdf5\", 2342314234, \"Name 1\", [\n//   new Team(\"bob\", 500),\n// ]);\n\ninterface Props {\n  startGame: Function;\n}\n\nconst database = firebase.database();\nvar defaultState: Array<Game> = [\n  // mockData1,\n  // mockData2,\n  // mockData3,\n  // mockData4,\n  // mockData5,\n];\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spinner: {\n      display: \"flex\",\n      \"& > * + *\": {\n        marginLeft: theme.spacing(2),\n      },\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      minHeight: \"200px\",\n    },\n  })\n);\n\nexport default function GameList({startGame}: Props): ReactElement {\n  const classes = useStyles();\n  const [games, setGames] = useState(defaultState);\n  const [gamesHaveLoaded, setGamesHaveLoaded] = useState(false);\n  const [userHasNoGames, setUserHasNoGames] = useState(false);\n\n  // database references\n  const rootRef = database.ref();\n  const usersRef = rootRef.child(\"/Users/\" + firebase.auth().currentUser?.uid);\n  const gamesRef = rootRef.child(\"/games\");\n  //const gameCodesRef = rootRef.child(\"/GameCodes\");\n\n  // When the component first loads run this\n  useEffect(() => {\n    // Fetch all of the games from firebase\n    usersRef\n      .child(\"/games\")\n      .orderByChild(\"date\")\n      .on(\"value\", async (snapshot) => {\n\n        // user has no games.\n        if (snapshot.val() === null) {\n          setGamesHaveLoaded(false);\n          setUserHasNoGames(true);\n\n          return;\n        }\n\n        var count = 0;\n\n        const newGames: Array<Game> = [];\n\n        snapshot.forEach((snap) => {\n          gamesRef.child(\"/\" + snap.key).once(\"value\", (game) => {\n            if (game.val() === null) {\n              // Game Id not found lets clean up the database a little and delete the ones that the game does not exist on.\n              usersRef.child(\"/games/\" + snap.key).set(null);\n            } else {\n              //game.val() contains a single game.\n              const newGame = convertGame(game);\n              newGames.push(newGame);\n              count = count + 1;\n              if (count === snapshot.numChildren()) {\n                newGames.reverse();\n                setGames(newGames);\n                setGamesHaveLoaded(true);\n                setUserHasNoGames(false);\n              }\n            }\n          });\n        });\n      });\n  }, []);\n\n  return (\n    <>\n      {gamesHaveLoaded ? (\n        <List component=\"nav\">\n          {games.map((game, index) => (\n            <div key={game.id}>\n              {index !== 0 && <Divider />}\n              <GameListItem onClick={startGame} game={game} />\n            </div>\n          ))}\n        </List>\n      ) : userHasNoGames ? (\n        <Typography variant=\"subtitle1\" style={{ padding: \"20px\" }}>\n          No games here... You should make one!\n        </Typography>\n      ) : (\n        <div className={classes.spinner}>\n          <CircularProgress />\n        </div>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport firebase from \"../classes/firebase\"\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\ninterface Props {\n  title: string;\n  showBackArrow: boolean;\n  onBackArrowClick: Function;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  })\n);\n\nconst MyAppBar = ({ title, showBackArrow, onBackArrowClick }: Props) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n\n  const signOut = () => {\n    firebase.auth().signOut()\n  }\n\n  const onMenuButtonClick = () => {\n\n  }\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            className={classes.menuButton}\n            onClick={() => (showBackArrow ? onBackArrowClick() : onMenuButtonClick())}\n          >\n            {showBackArrow ? <ArrowBackIosIcon /> : <MenuIcon />}\n          </IconButton>\n\n          <Typography variant=\"h6\" className={classes.title}>\n            {title}\n          </Typography>\n\n          <IconButton color=\"inherit\" edge=\"end\" onClick={handleClick}>\n            <AccountCircle />\n          </IconButton>\n          <Menu\n            id=\"accountMenu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            <MenuItem onClick={signOut}>Sign Out</MenuItem>\n          </Menu>\n        </Toolbar>\n      </AppBar>\n      \n      <Toolbar/>\n    </div>\n  );\n};\n\nexport default MyAppBar;\n","import React from \"react\";\nimport { Team } from \"../classes/Game\";\nimport {\n  Typography,\n  makeStyles,\n  Theme,\n  createStyles,\n  Paper,\n} from \"@material-ui/core\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\n\ninterface Props {\n  team: Team;\n  onDelete: Function;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {},\n    text: {},\n  })\n);\n\nconst CreateTeamDisplay = ({ team, onDelete }: Props) => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.card} variant=\"outlined\">\n      <Grid container justify=\"center\" alignItems=\"center\">\n        <Grid item xs={8}>\n          <Typography\n            variant=\"subtitle1\"\n            style={{ padding: \"5px\", paddingTop: \"20px\", paddingBottom: \"20px\" }}\n          >\n            {team.name}\n          </Typography>\n        </Grid>\n        <Grid item xs={4}>\n          <IconButton onClick={() => onDelete(team.name)}>\n            <DeleteIcon />\n          </IconButton>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default CreateTeamDisplay;\n","import React, { useState, FormEvent } from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { Theme } from \"@material-ui/core/styles/createMuiTheme\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport Game, { Team } from \"../classes/Game\";\nimport Container from \"@material-ui/core/Container/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CreateTeamDisplay from \"./CreateTeamDisplay\";\nimport firebase from \"../classes/firebase\"\nimport { convertGame } from \"../classes/utils\";\n\ninterface Props {\n  startGame: Function;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      justifyContent: \"center\",\n      textAlign: \"center\",\n      alignItems: \"center\",\n    },\n    paper: {\n      marginTop: theme.spacing(4),\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n    avatar: {\n      margin: theme.spacing(2),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: \"100%\", // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  })\n);\n\nconst teamState: Array<Team> = [];\n\nconst CreateGame = ({ startGame }: Props) => {\n  const classes = useStyles();\n\n  const [gameName, setGameName] = useState(\"\");\n  const [teams, setTeams] = useState(teamState);\n  const [currentTeam, setCurrentTeam] = useState(\"\");\n  const [isErrorTeams, setIsErrorTeams] = useState(false)\n  const [gameCode, setGameCode] = useState(\"\")\n  const [gameCodeError, setGameCodeError] = useState(false)\n\n  const onGameCodeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setGameCode(event.target.value)\n  }\n\n  const onGameCodePlayClick = () => {\n    firebase.database().ref(\"GameCodes/\").orderByChild(\"code\").equalTo(gameCode).once(\"child_added\").then(snap => {\n      if (snap.val()) {\n        console.log(\"HERE\")\n        // We have valid input!\n        console.log(\"HERE\", snap.key)\n\n        setGameCodeError(false)\n        firebase.database().ref(\"games/\" + snap.key).once(\"value\").then(game => {\n          const newGame = convertGame(game)\n          startGame(newGame)\n        })\n\n        let update = new Map();\n        update.set(snap.key, true);\n\n        firebase\n          .database()\n          .ref(\"/Users/\" + firebase.auth().currentUser?.uid + \"/games\")\n          .update(Object.fromEntries(update));\n      }\n      else {\n        setGameCodeError(true)\n      }\n    })\n  }\n\n  const onGameNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setGameName(event.target.value);\n  };\n\n  const onCurrentTeamChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCurrentTeam(event.target.value);\n  };\n\n  const addTeam = () => {\n    if (currentTeam === \"\") {\n      return;\n    }\n\n    const newTeam = new Team(currentTeam);\n    setTeams([...teams, newTeam]);\n    setCurrentTeam(\"\");\n  };\n\n  const onSubmit = async (event: FormEvent) => {\n    event.preventDefault();\n\n    if (teams.length < 1) {\n      console.log(\"Need at least one team to continue\")\n\n      // TODO add error handling/message to\n      setIsErrorTeams(true)\n      return\n    }\n\n    const userId = firebase.auth().currentUser?.uid\n    const newGameRef = (await firebase.database().ref(\"/games\").push())\n    \n    const newGame = new Game(newGameRef.key || String(Date.now()), Date.now(), gameName, teams)\n\n    newGameRef.set(newGame)\n    let update = new Map();\n    update.set(newGameRef.key, true)\n\n    firebase\n      .database()\n      .ref(\"/Users/\" + userId + \"/games\")\n      .update(Object.fromEntries(update), () => {\n        startGame(newGame);\n      });\n  };\n\n  const onDeleteTeam = (teamName: string) => {\n    console.log(\"deleteingTeam\");\n    const newTeams = [...teams];\n    const indexToRemove = newTeams.findIndex(team => team.name === teamName)\n    newTeams.splice(indexToRemove, 1)\n    setTeams(newTeams);\n  };\n\n  const keyPressed = (event:  React.KeyboardEvent) => {\n    if(event.key === 'Enter') {\n      event.preventDefault()\n      addTeam()\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\">\n            {gameName !== \"\" ? gameName : \"New Game\"}\n          </Typography>\n          <form className={classes.form} onSubmit={onSubmit}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Game Name\"\n              name=\"gameName\"\n              value={gameName}\n              onChange={onGameNameChange}\n              autoFocus\n            />\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Typography component=\"p\" variant=\"h6\">\n                  Teams/Players\n                </Typography>\n              </Grid>\n\n              {teams.map((team, index) => (\n                <Grid item xs={6} key={index + team.name}>\n                  <CreateTeamDisplay team={team} onDelete={onDeleteTeam} />\n                </Grid>\n              ))}\n\n              <Grid item xs={12}>\n                {teams.length === 0 && (\n                  <Typography\n                    component=\"p\"\n                    variant=\"subtitle2\"\n                    color=\"textSecondary\"\n                  >\n                    Teams will show up here once added\n                  </Typography>\n                )}\n              </Grid>\n\n              <Grid container spacing={2}>\n                <Grid item xs={8}>\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    label=\"Team Name\"\n                    value={currentTeam}\n                    onChange={onCurrentTeamChange}\n                    autoComplete=\"current-password\"\n                    onKeyPress={keyPressed}\n                    error={isErrorTeams}\n                  />\n                </Grid>\n                <Grid item xs={4}>\n                  <Button\n                    fullWidth\n                    variant=\"text\"\n                    color=\"secondary\"\n                    className={classes.submit}\n                    onClick={addTeam}\n                  >\n                    Add Team\n                  </Button>\n                </Grid>\n              </Grid>\n            </Grid>\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Create Game\n            </Button>\n            <Grid\n              container\n              alignContent=\"center\"\n              alignItems=\"center\"\n              justify=\"center\"\n              spacing={1}\n              style={{ marginTop: \"10px\" }}\n            >\n              <Typography style={{ width: \"100%\", marginBottom: \"10px\" }}>\n                or\n              </Typography>\n              <Typography>Enter GameCode</Typography>\n              <TextField\n                value={gameCode}\n                onChange={onGameCodeChange}\n                error={gameCodeError}\n                style={{margin: \"15px\"}}\n              />\n              <Button\n                onClick={onGameCodePlayClick}\n                variant=\"outlined\"\n                color=\"primary\"\n                style={{marginTop: \"10px\"}}\n              >\n                Add By Code\n              </Button>\n            </Grid>\n          </form>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default CreateGame;\n","import React from \"react\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  Paper,\n  Grid,\n  IconButton,\n} from \"@material-ui/core\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport firebase from \"../../../classes/firebase\"\nimport { TeamHistory } from \"../../../classes/Game\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      marginTop: theme.spacing(2),\n      textAlign: \"center\",\n      padding: \"10px\",\n    },\n    teamName: {\n      textAlign: \"left\",\n      marginLeft: theme.spacing(2),\n    },\n    history: {\n      padding: \"5px\",\n      margin: \"5px\",\n    },\n    editButton: {\n      textAlign: \"right\",\n    },\n    clearIconContainer: {},\n    clearIcon: {\n      padding: \"0\",\n      margin: \"0\",\n    },\n  })\n);\n\ninterface Props {\n  isEditing: boolean;\n  score: string;\n  index: number;\n  teamIndex: number;\n  teamHistory: TeamHistory;\n  teamScore: number;\n  gameId: string;\n}\n\nconst HistoryItem = ({ isEditing, score, index, teamIndex, teamHistory, teamScore, gameId }: Props) => {\n  const classes = useStyles();\n\n  const removeHistoryItem = () => {\n    if (!isEditing) {\n      return;\n    }\n\n    const newHistory: Array<string> = [...teamHistory.pastScores];\n    newHistory.splice(index, 1)\n    const newScore = teamScore - Number(score)\n\n    console.log(\"current team history\", teamHistory)\n    console.log(\"current team index \", teamIndex)\n\n    firebase\n      .database()\n      .ref(\"/games/\" + gameId + \"/teams/\" + teamIndex)\n      .update({\n        score: newScore,\n        history: {\n          pastScores: newHistory,\n        },\n      }, () => {\n        console.log(\"history removed\")\n      });\n  };\n\n  return (\n    <Paper variant=\"outlined\" className={classes.history}>\n      <Grid container justify=\"center\" alignItems=\"center\">\n        {isEditing && (\n          <Grid item xs={12} className={classes.clearIconContainer}>\n            <IconButton\n              onClick={(event) => {\n                event.stopPropagation();\n                removeHistoryItem();\n              }}\n              className={classes.clearIcon}\n            >\n              <ClearIcon fontSize=\"small\" className={classes.clearIcon} />\n            </IconButton>\n          </Grid>\n        )}\n        <Grid item xs={12}>\n          {score}\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default HistoryItem;\n","import React, { FormEvent, useState } from \"react\";\nimport Game, { Team } from \"../../../classes/Game\";\nimport {\n  Paper,\n  makeStyles,\n  Theme,\n  createStyles,\n  Grid,\n  Typography,\n  IconButton,\n  TextField,\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport firebase from \"../../../classes/firebase\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport HistoryItem from \"./HistoryItem\";\n\ninterface Props {\n  team: Team;\n  updatePoints: Function;\n  index: number;\n  gameId: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      marginTop: theme.spacing(2),\n      textAlign: \"center\",\n      padding: \"10px\",\n    },\n    teamName: {\n      textAlign: \"left\",\n      marginLeft: theme.spacing(2),\n    },\n    history: {\n      padding: \"5px\",\n      margin: \"5px\",\n    },\n    editButton: {\n      textAlign: \"right\",\n    },\n    clearIconContainer: {},\n    clearIcon: {\n      padding: \"0\",\n      margin: \"0\",\n    },\n  })\n);\n\nconst PlayGameTeam = ({ team, updatePoints, index, gameId }: Props) => {\n  const classes = useStyles();\n\n  const [cardExpanded, setCardExpanded] = useState(false);\n  const [scoreChange, setScoreChange] = useState(\"\");\n  const [isEditing, setIsEditing] = useState(false);\n\n  const expandCard = () => {\n    setCardExpanded(!cardExpanded);\n  };\n\n  const onInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (isNaN(Number(event.target.value))) {\n      return;\n    }\n    setScoreChange(event.target.value);\n  };\n\n  // const updatePoints = () => {\n  //   // update the model with a new instance\n  //   const newTeam = team.createTeamForFirebase()\n  //   newTeam.addScore(Number(scoreChange))\n\n  //   firebase.database().ref(\"/games/\" + gameId + \"/\" + index).update(newTeam)\n\n  // }\n\n  const addScore = (isPositive: boolean) => {\n    if (scoreChange === \"\") {\n      return;\n    }\n\n    \n\n    if (isPositive) {\n      updatePoints(Number(scoreChange), index);\n    } else {\n      updatePoints(Number(\"-\" + scoreChange), index);\n    }\n\n    setScoreChange(\"\");\n    setCardExpanded(false);\n  };\n\n  return (\n    <Paper className={classes.paper} variant=\"outlined\" onClick={expandCard}>\n      <Grid container justify=\"center\" alignItems=\"center\">\n        <Grid item xs={12}>\n          <Typography variant=\"h6\" className={classes.teamName}>\n            {team.name}\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"h5\">{team.score}</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <IconButton>\n            <ExpandMoreIcon />\n          </IconButton>\n        </Grid>\n\n        {cardExpanded && (\n          <>\n            <Grid item xs={3}>\n              <IconButton onClick={() => addScore(false)}>\n                <RemoveIcon color=\"secondary\" />\n              </IconButton>\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                type=\"tel\"\n                label=\"+ or - Score\"\n                name=\"gameName\"\n                value={scoreChange}\n                onChange={onInputChange}\n                autoFocus\n                inputMode=\"numeric\"\n                onClick={(e) => e.stopPropagation()}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <IconButton onClick={() => addScore(true)}>\n                <AddIcon color=\"primary\" />\n              </IconButton>\n            </Grid>\n\n            {team.history &&\n              team.history.pastScores.map((score, historyIndex) => {\n                return (\n                  <HistoryItem\n                    key={\"indexof\" + score + historyIndex}\n                    isEditing={isEditing}\n                    score={score}\n                    index={historyIndex}\n                    teamIndex={index}\n                    teamScore={team.score}\n                    teamHistory={team.history}\n                    gameId={gameId}\n                  />\n                );\n              })}\n\n            <Grid item xs={12} className={classes.editButton}>\n              <IconButton\n                onClick={(event) => {\n                  event.stopPropagation();\n                  setIsEditing(!isEditing);\n                }}\n              >\n                <EditIcon />\n              </IconButton>\n            </Grid>\n          </>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default PlayGameTeam;\n","import React from 'react'\nimport { Grid, Typography, Paper, Button } from '@material-ui/core'\nimport Game, { Round } from '../../../classes/Game'\n\ninterface Props {\n    round: Round;\n    game: Game;\n    backToEdit: Function;\n    confirmRound: Function;\n}\n\nconst RoundSummary = ({ round, game, backToEdit, confirmRound }: Props) => {\n    return (\n        \n        <Grid\n          container\n          justify=\"center\"\n          alignContent=\"center\"\n          alignItems=\"center\"\n          spacing={2}\n          style={{textAlign: \"center\", padding: \"20px\"}}\n        >\n          <Grid item xs={12}>\n            <Typography variant=\"h5\">Summary</Typography>\n          </Grid>\n          {game.teams.map((team, index) => (\n            <Grid item xs={4} key={team.name + index}>\n              <Paper variant=\"outlined\">\n                <Grid\n                  container\n                  justify=\"center\"\n                  alignContent=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                >\n                  <Grid item xs={12}>\n                    <Typography variant=\"h6\">{team.name}</Typography>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Typography variant=\"subtitle1\">\n                      {round.teams[index]}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Paper>\n            </Grid>\n          ))}\n\n          <Grid container style={{paddingTop: \"20px\"}}>\n          <Grid item xs={6} style={{textAlign: \"left\"}}>\n            <Button variant=\"outlined\" color=\"secondary\" onClick={() => backToEdit()}>Edit</Button>\n          </Grid>\n          <Grid item xs={6} style={{textAlign: \"right\"}}>\n            <Button variant=\"outlined\" color=\"primary\" onClick={() => confirmRound(round)}>Confirm</Button>\n          </Grid>\n          </Grid>\n          \n        </Grid>  \n            )\n}\n\nexport default RoundSummary\n","import React from \"react\";\nimport { Grid, IconButton, Typography } from \"@material-ui/core\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport Game from \"../../../../classes/Game\";\n\ninterface Props {\n  currentTeamIndex: number;\n  onPreviousPlayer: Function;\n  game: Game;\n  onNextPlayer: Function;\n  showSummary: Function;\n  exitRound: Function;\n}\n\nconst RoundTopBar = ({\n  currentTeamIndex,\n  onPreviousPlayer,\n  game,\n  onNextPlayer,\n  showSummary,\n  exitRound,\n}: Props) => {\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignContent=\"center\"\n      alignItems=\"center\"\n      style={{ marginTop: \"10px\" }}\n    >\n      <Grid item xs={4}>\n        {currentTeamIndex > 0 ? (\n          <IconButton\n            style={{ paddingLeft: \"0\", marginLeft: \"0\" }}\n            onClick={() => onPreviousPlayer()}\n          >\n            <ArrowBackIosIcon />\n            <Typography noWrap>\n              {game.teams[currentTeamIndex - 1].name}\n            </Typography>\n          </IconButton>\n        ) : (\n          <IconButton\n            style={{ paddingLeft: \"0\", marginLeft: \"0\" }}\n            onClick={() => exitRound()}\n          >\n            <ArrowBackIosIcon />\n            <Typography noWrap>Back</Typography>\n          </IconButton>\n        )}\n      </Grid>\n      <Grid item xs={4} style={{ textAlign: \"center\" }}>\n        <Typography variant=\"h5\">\n          {game.teams[currentTeamIndex].name}\n        </Typography>\n      </Grid>\n      <Grid item xs={4} style={{ textAlign: \"right\" }}>\n        {currentTeamIndex < game.teams.length - 1 ? (\n          <IconButton\n            style={{ paddingRight: \"0\", marginRight: \"0\" }}\n            onClick={() => onNextPlayer()}\n          >\n            <Typography noWrap>\n              {game.teams[currentTeamIndex + 1].name}\n            </Typography>\n            <ArrowForwardIosIcon />\n          </IconButton>\n        ) : (\n          <IconButton\n            style={{ paddingRight: \"0\", marginRight: \"0\" }}\n            onClick={() => showSummary()}\n          >\n            <Typography noWrap>Summary</Typography>\n            <ArrowForwardIosIcon />\n          </IconButton>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default RoundTopBar;\n","import React from \"react\";\nimport { Grid, IconButton, TextField } from \"@material-ui/core\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Game from \"../../../classes/Game\";\n\ninterface Props {\n  game: Game;\n  score: string;\n  currentTeamIndex: number;\n\n  textField: React.RefObject<HTMLDivElement>;\n\n  onPreviousPlayer: Function;\n  onNextPlayer: Function;\n  showSummary: Function;\n  setScore: Function;\n}\n\nconst RoundTextField = ({\n  textField,\n  score,\n  setScore,\n  showSummary,\n  onNextPlayer,\n  game,\n  currentTeamIndex,\n}: Props) => {\n  const keyPressed = (event: React.KeyboardEvent) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n\n      if (currentTeamIndex === game.teams.length - 1) {\n        showSummary();\n      } else {\n        onNextPlayer();\n      }\n    }\n  };\n\n  const onBackClick = () => {\n    if (currentTeamIndex + 1 === game.teams.length) {\n      showSummary(true);\n    } else {\n      onNextPlayer(true);\n    }\n  }\n\n  return (\n    <Grid container justify=\"center\" alignContent=\"center\" alignItems=\"center\">\n      <Grid item xs={3} style={{ textAlign: \"right\" }}>\n        <IconButton\n          onClick={onBackClick}\n        >\n          <RemoveIcon color=\"secondary\" />\n        </IconButton>\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          inputRef={textField}\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          type=\"tel\"\n          label=\"Score this Round\"\n          value={score}\n          onChange={(event) => setScore(event.target.value)}\n          onKeyPress={(event) => keyPressed(event)}\n          autoFocus\n          inputMode=\"numeric\"\n          onClick={(e) => e.stopPropagation()}\n        />\n      </Grid>\n      <Grid item xs={3} style={{ textAlign: \"left\" }}>\n        <IconButton\n          onClick={\n            currentTeamIndex + 1 === game.teams.length\n              ? () => showSummary()\n              : () => onNextPlayer()\n          }\n        >\n          <AddIcon color=\"primary\" />\n        </IconButton>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default RoundTextField;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Typography } from \"@material-ui/core\";\nimport HistoryItem from \"./HistoryItem\";\nimport Game from \"../../../classes/Game\";\n\ninterface Props {\n  game: Game;\n  currentTeamIndex: number;\n}\n\nconst RoundHistory = ({ game, currentTeamIndex }: Props) => {\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignContent=\"center\"\n      alignItems=\"center\"\n      style={{\n        paddingLeft: \"0\",\n        paddingRight: \"0\",\n        marginLeft: \"0\",\n        marginRight: \"0\",\n      }}\n      spacing={0}\n    >\n      <Grid item xs={12} style={{ textAlign: \"center\" }}>\n        <Typography variant=\"subtitle1\">History</Typography>\n      </Grid>\n      {game.teams[currentTeamIndex].history &&\n        game.teams[currentTeamIndex].history.pastScores.map(\n          (historyScore, historyIndex) => {\n            return (\n              <HistoryItem\n                key={\n                  game.teams[currentTeamIndex].name +\n                  historyScore +\n                  historyIndex\n                }\n                isEditing={false}\n                score={historyScore}\n                index={historyIndex}\n                teamIndex={currentTeamIndex}\n                teamHistory={game.teams[currentTeamIndex].history}\n                teamScore={game.teams[currentTeamIndex].score}\n                gameId={game.id}\n              />\n            );\n          }\n        )}\n    </Grid>\n  );\n};\n\nexport default RoundHistory;\n","import React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  Typography,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport HistoryItem from \"./HistoryItem\";\nimport Game from \"../../../classes/Game\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport RoundTopBar from \"./roundTopBar/RoundTopBar\";\nimport RoundTextField from \"./RoundTextField\";\nimport RoundHistory from \"./RoundHistory\";\n\ninterface Props {\n  currentTeamIndex: number;\n  game: Game;\n  score: string;\n\n  textField: React.RefObject<HTMLDivElement>;\n\n  onPreviousPlayer: Function;\n  onNextPlayer: Function;\n  showSummary: Function;\n  setScore: Function;\n  exitRound: Function;\n}\n\nconst RoundPlayerInput = ({\n  currentTeamIndex,\n  onPreviousPlayer,\n  onNextPlayer,\n  showSummary,\n  game,\n  score,\n  setScore,\n  textField,\n  exitRound,\n}: Props) => {\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignContent=\"center\"\n      alignItems=\"center\"\n      style={{\n        paddingLeft: \"0\",\n        paddingRight: \"0\",\n        marginLeft: \"0\",\n        marginRight: \"0\",\n      }}\n      spacing={0}\n    >\n      {/* Top Bar containing buttons to go between players */}\n      <RoundTopBar\n        currentTeamIndex={currentTeamIndex}\n        onPreviousPlayer={onPreviousPlayer}\n        game={game}\n        onNextPlayer={onNextPlayer}\n        showSummary={showSummary}\n        exitRound={exitRound}\n      />\n\n      {/* Text Input Field and plus and minus buttons */}\n      <RoundTextField\n        game={game}\n        score={score}\n        currentTeamIndex={currentTeamIndex}\n        textField={textField}\n        onPreviousPlayer={onPreviousPlayer}\n        onNextPlayer={onNextPlayer}\n        showSummary={showSummary}\n        setScore={setScore}\n      />\n\n      {/* RoundHistory */}\n      <RoundHistory game={game} currentTeamIndex={currentTeamIndex}/>\n\n      {/* Next Player Button */}\n      <Grid item xs={12} style={{ textAlign: \"right\", paddingTop: \"40px\" }}>\n        {currentTeamIndex < game.teams.length - 1 ? (\n          <Button variant=\"outlined\" onClick={() => onNextPlayer()}>\n            Next Player\n          </Button>\n        ) : (\n          <Button variant=\"outlined\" onClick={() => showSummary()}>\n            Summary\n          </Button>\n        )}\n      </Grid>\n\n    </Grid>\n  );\n};\n\nexport default RoundPlayerInput;\n","import React, { useState, createRef } from \"react\";\nimport Game, { Round } from \"../../../classes/Game\";\nimport RoundSummary from \"./RoundSummary\";\nimport RoundPlayerInput from \"../gamePlayUtils/RoundPlayerInput\";\n\ninterface Props {\n  game: Game;\n  applyRound: Function;\n  exitRound: Function;\n}\n\nconst ScoreRound = ({ game, applyRound, exitRound }: Props) => {\n  const [currentTeamIndex, setCurrentTeamIndex] = useState(0);\n  const [score, setScore] = useState(\"\");\n  const [round, setRound] = useState(new Round([]));\n  const [isShowingSummary, setIsShowingSummary] = useState(false);\n\n  const textField = createRef<HTMLDivElement>();\n\n  const onNextPlayer = (isNegative = false) => {\n    // add an item to the history\n    setRound((prevRound) => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      let newScore = \"0\";\n\n      if (isNegative) {\n        if (score !== \"\") {\n          newScore = \"-\" + score;\n        } else {\n          newScore = \"0\";\n        }\n      } else {\n        if (score !== \"\") {\n          newScore = score;\n        } else {\n          newScore = \"0\";\n        }\n      }\n\n      prevRound.setValue(currentTeamIndex, newScore);\n\n      // Increase the current team index\n      setCurrentTeamIndex((prevIndex) => {\n        if (prevIndex === game.teams.length - 1) {\n          return prevIndex;\n        }\n\n        // fix the score\n        setScore(() => {\n          if (prevRound.teams[prevIndex + 1]) {\n            console.log(\"We have an item\", prevRound.teams[prevIndex + 1])\n            return String(Number(prevRound.teams[prevIndex + 1]));\n          }\n\n          return \"\";\n        });\n\n        return prevIndex + 1;\n      });\n      return prevRound;\n    });\n\n    textField.current?.focus();\n  };\n\n  const onPreviousPlayer = (isNegative = false) => {\n    // add item to history\n    setRound((prevRound) => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      let newScore = \"0\";\n\n      if (isNegative) {\n        if (score !== \"\") {\n          newScore = \"-\" + score;\n        } else {\n          newScore = \"0\";\n        }\n      } else {\n        if (score !== \"\") {\n          newScore = score;\n        } else {\n          newScore = \"0\";\n        }\n      }\n\n      prevRound.setValue(currentTeamIndex, newScore);\n\n\n\n      // decrease the currentTeamIndex\n    setCurrentTeamIndex((prevIndex) => {\n      if (prevIndex <= 0) {\n        return prevIndex;\n      }\n\n      setScore(() => {\n        if (prevRound.teams[prevIndex - 1]) {\n          console.log(\"We have an item\", prevRound.teams[prevIndex - 1])\n          return prevRound.teams[prevIndex - 1];\n        }\n\n        return \"\";\n      });\n\n      return prevIndex - 1;\n    });\n\n    \n\n      return prevRound;\n    });\n\n    \n\n    textField.current?.focus();\n  };\n\n  const showSummary = (isNegative = false) => {\n    setRound((prevRound) => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      let newScore = \"0\";\n\n      if (isNegative) {\n        if (score !== \"\") {\n          newScore = \"-\" + score;\n        } else {\n          newScore = \"0\";\n        }\n      } else {\n        if (score !== \"\") {\n          newScore = score;\n        } else {\n          newScore = \"0\";\n        }\n      }\n\n      prevRound.setValue(currentTeamIndex, newScore);\n      return prevRound;\n    });\n\n    setIsShowingSummary(() => true);\n  };\n\n  const backToEdit = () => {\n    setIsShowingSummary(() => false);\n  };\n\n  return (\n    <div\n      style={{\n        paddingLeft: \"0\",\n        paddingRight: \"0\",\n        marginLeft: \"0\",\n        marginRight: \"0\",\n      }}\n    >\n      {isShowingSummary ? (\n        <RoundSummary\n          round={round}\n          game={game}\n          backToEdit={backToEdit}\n          confirmRound={applyRound}\n        />\n      ) : (\n        <RoundPlayerInput\n          currentTeamIndex={currentTeamIndex}\n          game={game}\n          score={score}\n          textField={textField}\n          onPreviousPlayer={onPreviousPlayer}\n          onNextPlayer={onNextPlayer}\n          showSummary={showSummary}\n          setScore={setScore}\n          exitRound={exitRound}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ScoreRound;\n\n/**\n * const onNextPlayer = () => {\n    saveToRound();\n    if (round.teams[currentTeamIndex + 1]) {\n      setScore(String(Number(round.teams[currentTeamIndex + 1])));\n    }\n\n    setCurrentTeamIndex(currentTeamIndex + 1);\n    textField.current?.focus();\n  };\n\n  const onPreviousPlayer = () => {\n    saveToRound();\n    if (round.teams[currentTeamIndex - 1]) {\n      setScore(String(Number(round.teams[currentTeamIndex - 1])));\n    }\n    setCurrentTeamIndex(currentTeamIndex - 1);\n\n    const node = textField.current;\n    if (node) {\n      node.focus();\n    }\n  };\n\n  const getScoreString = () => {\n    const value = Number(score);\n\n    if (value > 0) {\n      return \"+\" + value;\n    }\n\n    return score;\n  };\n\n  const saveToRound = () => {\n    const scoreString = getScoreString();\n\n    const newRound = new Round(round.teams);\n    newRound.setValue(currentTeamIndex, scoreString);\n\n    setScore(\"\");\n  };\n\n  const onSetScoreInputChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setScore(event.target.value);\n  };\n\n  const showSummary = () => {\n    saveToRound();\n    console.log(round);\n    setIsShowingSummary(true);\n  };\n\n  const backToEdit = () => {\n    setIsShowingSummary(false);\n\n    if (round.teams[currentTeamIndex]) {\n      setScore(String(Number(round.teams[currentTeamIndex])));\n    }\n  };\n\n  const makeNegative = () => {\n    setScore(\"-\" + score);\n\n    if (currentTeamIndex + 1 === game.teams.length) {\n      console.log(\"last one\");\n      showSummary();\n      return;\n    }\n\n    console.log(\"in make negative\", score);\n\n    onNextPlayer();\n  };\n */\n","import React from 'react'\n\ninterface Props {\n    link: string;\n}\n\nconst GameInfoLink = (props: Props) => {\n    return (\n        <div>\n            Hand & Foot Rules: {props.link}\n        </div>\n    )\n}\n\nexport default GameInfoLink\n","import React, { useState, useEffect } from \"react\";\nimport Game, { TeamHistory, Team, Round } from \"../../classes/Game\";\nimport firebase from \"../../classes/firebase\";\nimport { convertGame } from \"../../classes/utils\";\nimport PlayGameTeam from \"./gamePlayUtils/PlayGameTeam\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport { Button, TextField, Typography } from \"@material-ui/core\";\nimport ScoreRound from \"./scoreRoundScreen/ScoreRound\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport GameInfoLink from \"./gamePlayUtils/roundTopBar/GameInfoLink\"\n\ninterface Props {\n  game: Game;\n}\n\nconst PlayGame = (props: Props) => {\n  const [game, setGame] = useState(props.game);\n  const [isScoringRound, setIsScoringRound] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [gameCode, setGameCode] = useState(\"Loading...\");\n  const [hasGameCode, setHasGameCode] = useState(true);\n  const [newGameCode, setNewGameCode] = useState(\"\");\n  const [newGameCodeError, setNewGameCodeError] = useState(false)\n\n  const onGameCodeChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewGameCode(event.target.value);\n\n    if (await checkForValidCode(event.target.value)) {\n      setNewGameCodeError(false);\n    }\n    else {\n      setNewGameCodeError(true);\n    }\n  };\n\n  const saveGameCode = async () => {\n    if (checkForValidCode(newGameCode)) {\n      firebase.database().ref(\"/GameCodes/\" + game.id).set({\n        code: newGameCode\n      })\n    }\n    else {\n      // INVALID CODE HANDLE ERROR\n      setNewGameCodeError(true);\n    }\n  };\n\n  const checkForValidCode = async (testCode: string) => {\n    const snapshot = await firebase\n      .database()\n      .ref(\"GameCodes/\")\n      .orderByChild(\"code\")\n      .equalTo(testCode)\n      .once(\"value\");\n\n    if (snapshot.val()) {\n      // we have something here... not valid\n      return false;\n    }\n    \n    return true;\n  };\n\n  const updatePoints = (score: number, index: number) => {\n    let newHistory: Array<string> = [];\n\n    if (game.teams[index].history) {\n      if (score > 0) {\n        newHistory = [\n          ...game.teams[index].history.pastScores,\n          \"+\" + String(score),\n        ];\n      } else {\n        newHistory = [...game.teams[index].history.pastScores, String(score)];\n      }\n    } else {\n      if (score > 0) {\n        newHistory.push(\"+\" + String(score));\n      } else {\n        newHistory.push(String(score));\n      }\n    }\n\n    const newScore = game.teams[index].score + score;\n\n    firebase\n      .database()\n      .ref(\"/games/\" + props.game.id + \"/teams/\" + index)\n      .update({\n        score: newScore,\n        history: {\n          pastScores: newHistory,\n        },\n      });\n  };\n\n  const applyRound = (round: Round) => {\n    round.teams.forEach((team, index) => {\n      updatePoints(Number(team), index);\n    });\n\n    setIsScoringRound(false);\n  };\n\n  const exitRound = () => {\n    setIsScoringRound((prevRound) => false);\n  };\n\n  // Database calls\n  useEffect(() => {\n    const database = firebase.database();\n\n    database.ref(\"/games/\" + game.id).on(\"value\", (snapshot) => {\n      setGame((prevGames) => convertGame(snapshot));\n    });\n\n    database.ref(\"/GameCodes/\" + game.id).on(\"value\", (snapshot) => {\n      if (snapshot.val()) {\n        console.log(\"game code \" + snapshot.val().code);\n        setGameCode((prev) => snapshot.val().code);\n        setHasGameCode((prev) => true);\n      } else {\n        console.log(\"no game code\");\n        setHasGameCode((prev) => false);\n      }\n    });\n  }, []);\n\n  const settingsClicked = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      {!isScoringRound && (\n        <Grid\n          container\n          justify=\"center\"\n          alignContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item xs={6}>\n            <IconButton\n              style={{ margin: \"0\", padding: \"0\" }}\n              onClick={settingsClicked}\n            >\n              <SettingsIcon />\n            </IconButton>\n            <Menu\n              id=\"settingsMenu\"\n              anchorEl={anchorEl}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              {hasGameCode ? (\n                <MenuItem>GameCode is \"{gameCode}\"</MenuItem>\n              ) : (\n                <MenuItem>\n                  <Typography>Set a gameCode</Typography>\n                  <TextField\n                    value={newGameCode}\n                    onChange={onGameCodeChange}\n                    style={{\n                      padding: \"5px\",\n                      marginLeft: \"5px\",\n                      marginRight: \"5px\",\n                    }}\n                    error={newGameCodeError}\n                  />\n                  <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    onClick={saveGameCode}\n                  >\n                    Save\n                  </Button>\n                </MenuItem>\n              )}\n              <MenuItem>\n                    {/* Link should come from database of game type TODO - conditionally load component if a game info link has been set*/}\n                    <GameInfoLink link=\"www.google.com\" />\n              </MenuItem>\n            </Menu>\n          </Grid>\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\n            <IconButton\n              style={{ marginRight: \"0\", paddingRight: \"0\" }}\n              onClick={() => setIsScoringRound(true)}\n            >\n              <Typography>Score Round</Typography>\n              <PlayArrowIcon />\n            </IconButton>\n          </Grid>\n        </Grid>\n      )}\n\n      {isScoringRound ? (\n        <ScoreRound game={game} applyRound={applyRound} exitRound={exitRound} />\n      ) : (\n        game.teams.map((team, index) => (\n          <PlayGameTeam\n            team={team}\n            key={team.name + index}\n            index={index}\n            updatePoints={updatePoints}\n            gameId={props.game.id}\n          />\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default PlayGame;\n","import React, { useState } from \"react\";\nimport GameList from \"./GameList\";\nimport MyAppBar from \"./MyAppBar\";\nimport Container from \"@material-ui/core/Container\";\nimport Game, { Team, TeamHistory } from \"../classes/Game\";\nimport CreateGame from \"./CreateGame\";\nimport Fab from \"@material-ui/core/Fab/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport PlayGame from \"./gamePlayScreen/PlayGame\";\nimport styled from \"styled-components\";\n\ninterface Props {}\n\nconst NewGameButton = styled(Fab)`\n  position: fixed;\n  bottom: 16px;\n  right: 16px;\n`;\n\nvar gameState: Game;\n\nconst HomeScreen = (props: Props) => {\n\n  const [isCreatingGame, setIsCreatingGame] = useState(false);\n  const [isPlayingGame, setIsPlayingGame] = useState(false);\n  const [gameToPlay, setGameToPlay] = useState(gameState);\n\n  const createGame = () => {\n    setIsCreatingGame(true);\n    setIsPlayingGame(false);\n  };\n\n  const startGame = (game: Game) => {\n    // console.log(\"start game called\");\n    setGameToPlay(game);\n    setIsCreatingGame(false);\n    setIsPlayingGame(true);\n  };\n\n  const backToGameList = () => {\n    setIsCreatingGame(false);\n    setIsPlayingGame(false);\n  }\n\n  return (\n    <div>\n      <MyAppBar\n        title={\n          isCreatingGame\n            ? \"Create Game\"\n            : isPlayingGame\n            ? gameToPlay.name\n            : \"My Games\"\n        }\n        showBackArrow={isPlayingGame || isCreatingGame ? true : false}\n        onBackArrowClick={backToGameList}\n      />\n      <Container>\n        {isCreatingGame && <CreateGame startGame={startGame} />}\n        {isPlayingGame && <PlayGame game={gameToPlay} />}\n        {isCreatingGame === false && isPlayingGame === false && (\n          <>\n            <GameList startGame={startGame} />\n            <div>\n              <NewGameButton\n                color=\"secondary\"\n                size=\"large\"\n                aria-label=\"add\"\n                onClick={createGame}\n              >\n                <AddIcon />\n              </NewGameButton>\n            </div>\n          </>\n        )}\n      </Container>\n    </div>\n  );\n};\n\nexport default HomeScreen;\n","import React, { FormEvent, useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport firebase from \"../classes/firebase\";\nimport { FormHelperText } from \"@material-ui/core\";\nimport GoogleButton from \"react-google-button\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"© Copyright \"}\n      {new Date().getFullYear()}\n      {\" | Jordan Burdett\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(2),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\ninterface Props {\n  toggle: Function;\n}\n\nexport default function SignIn({ toggle }: Props) {\n  const classes = useStyles();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(false);\n  const [incorrectPassword, setIncorrectPassword] = useState(false);\n\n  const onSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(username, password)\n      .catch((error) => {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n\n        if (errorCode === \"auth/wrong-password\") {\n          setIncorrectPassword(true);\n        }\n        console.log(error);\n      });\n  };\n\n  const signInWithGoogle = () => {\n    let provider = new firebase.auth.GoogleAuthProvider();\n\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then((user) => {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        console.log(user);\n        // ...\n      })\n      .catch(function (error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        // The email of the user's account used.\n        var email = error.email;\n        // The firebase.auth.AuthCredential type that was used.\n        var credential = error.credential;\n        // ...\n      });\n  };\n\n  const onUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setUsername(event.target.value.toLowerCase());\n  };\n\n  const onPasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPassword(event.target.value);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} onSubmit={onSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            value={username}\n            onChange={onUsernameChange}\n            autoFocus\n          />\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={onPasswordChange}\n            autoComplete=\"current-password\"\n          />\n\n          {incorrectPassword && (\n            <FormHelperText error={true}>* Incorrect Password</FormHelperText>\n          )}\n\n          <FormControlLabel\n            control={\n              <Checkbox\n                value=\"remember\"\n                checked={rememberMe}\n                color=\"primary\"\n                onChange={() => setRememberMe(!rememberMe)}\n              />\n            }\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link onClick={() => toggle()} variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n          <Grid container>\n            <Grid item xs={12}>\n              <GoogleButton\n                onClick={signInWithGoogle}\n                style={{ marginTop: \"50px\" }}\n              />\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React, { useState, FormEvent } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport firebase from \"../classes/firebase\";\nimport { FormHelperText } from \"@material-ui/core\";\nimport GoogleButton from \"react-google-button\"\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"© Copyright \"}\n      {new Date().getFullYear()}\n      {\" | Jordan Burdett\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\ninterface Props {\n  toggle: Function;\n}\n\nexport default function SignUp({ toggle }: Props) {\n  const classes = useStyles();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  \n  const onEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(event.target.value.toLowerCase());\n  };\n\n  const onPasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPassword(event.target.value);\n  };\n\n  const signInWithGoogle = () => {\n    let provider = new firebase.auth.GoogleAuthProvider();\n\n    firebase.auth().signInWithPopup(provider).then( user => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      console.log(user)\n      // ...\n    }).catch(function(error) {\n      // Handle Errors here.\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      var errorCode = error.code;\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      var errorMessage = error.message;\n      // The email of the user's account used.\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      var credential = error.credential;\n      // ...\n    });\n  }\n\n  const onSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    // If I wanted to do a check to ensure that we have a strong password or something do it here\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .catch((error) => {\n        setErrorMessage(error.message);\n        setHasError(true);\n      });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} onSubmit={onSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={email}\n                onChange={onEmailChange}\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={password}\n                onChange={onPasswordChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    value=\"keepMeSignedIn\"\n                    color=\"primary\"\n                    checked={rememberMe}\n                    onChange={() => setRememberMe(!rememberMe)}\n                  />\n                }\n                label=\"Always remember me on this device?\"\n              />\n\n              {hasError && (\n                <FormHelperText error={true}>\n                  * {errorMessage}\n                </FormHelperText>\n              )}\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link onClick={() => toggle()} variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n\n          <Grid container>\n            <Grid item xs={12}>\n              <GoogleButton onClick={signInWithGoogle} style={{marginTop: \"50px\"}}/>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport SignIn from \"./SignIn\";\nimport SignUp from \"./SignUp\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\n\ninterface Props {}\n\nconst LoginScreen = (props: Props) => {\n  const [isSignUp, setIsSignUp] = useState(false);\n\n  const toggleSignUp = () => {\n    setIsSignUp(!isSignUp);\n  };\n\n  return (\n    <>\n      <Container>\n        <Typography align=\"center\" variant=\"h3\" style={{marginTop: \"50px\"}}>\n          Score Games\n        </Typography>\n      </Container>\n      {isSignUp ? (\n        <SignUp toggle={toggleSignUp} />\n      ) : (\n        <SignIn toggle={toggleSignUp} />\n      )}\n    </>\n  );\n};\n\nexport default LoginScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport DarkModeToggle from \"./DarkModeToggle\";\nimport HomeScreen from \"./HomeScreen\";\nimport LoginScreen from \"./LoginScreen\";\nimport firebase from \"firebase\";\n\nfunction App() {\n  const [darkState, setDarkState] = useState(false);\n  const palletType = darkState ? \"dark\" : \"light\";\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: palletType,\n    },\n  });\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        setLoggedIn(true);\n      } else {\n        setLoggedIn(false);\n      }\n    });\n  }, []);\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      {loggedIn ? <HomeScreen /> : <LoginScreen />}\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jordan/Projects/ScoreGames/score-games/pages/account/login.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // bootstrap styles\n\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n// firebase\nimport { firebase, auth } from \"../../features/Firebase/firebaseConnect\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\"; // next router\n\nimport { useRouter } from \"next/router\";\nvar uiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n  signInSuccessUrl: '/game/list',\n  // We will display Google as auth providers\n  signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID]\n};\n\nvar Login = function Login(props) {\n  _s();\n\n  var _useState = useState(false),\n      isLoggedIn = _useState[0],\n      setIsLoggedIn = _useState[1];\n\n  var router = useRouter();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Jumbotron, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(StyledFirebaseAuth, {\n          uiConfig: uiConfig,\n          firebaseAuth: auth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Login, \"bVzxhCltSPZ9vfV7Geh2O72C4NU=\", false, function () {\n  return [useRouter];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/jordan/Projects/ScoreGames/score-games/pages/account/login.tsx"],"names":["React","useState","Container","Jumbotron","firebase","auth","StyledFirebaseAuth","useRouter","uiConfig","signInFlow","signInSuccessUrl","signInOptions","GoogleAuthProvider","PROVIDER_ID","Login","props","isLoggedIn","setIsLoggedIn","router"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;AAGA;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,yCAA/B;AACA,OAAOC,kBAAP,MAA+B,qCAA/B,C,CAEA;;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,IAAMC,QAAQ,GAAG;AACf;AACAC,EAAAA,UAAU,EAAE,OAFG;AAGf;AACAC,EAAAA,gBAAgB,EAAE,YAJH;AAKf;AACAC,EAAAA,aAAa,EAAE,CACbP,QAAQ,CAACC,IAAT,CAAcO,kBAAd,CAAiCC,WADpB;AANA,CAAjB;;AAcA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAkB;AAAA;;AAAA,kBAEMd,QAAQ,CAAC,KAAD,CAFd;AAAA,MAEvBe,UAFuB;AAAA,MAEXC,aAFW;;AAG9B,MAAMC,MAAM,GAAGX,SAAS,EAAxB;AAGA,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,SAAD;AAAA,6BACE,QAAC,SAAD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,QAAC,kBAAD;AAAoB,UAAA,QAAQ,EAAEC,QAA9B;AAAwC,UAAA,YAAY,EAAEH;AAAtD;AAAA;AAAA;AAAA;AAAA,iBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAUD,CAhBD;;GAAMS,K;UAGWP,S;;;KAHXO,K;AAkBN,eAAeA,KAAf","sourcesContent":["import React, {useState} from \"react\";\n\n// bootstrap styles\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\n\n// firebase\nimport { firebase, auth } from \"../../features/Firebase/firebaseConnect\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\n\n// next router\nimport { useRouter } from \"next/router\";\n\nconst uiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n  signInSuccessUrl: '/game/list',\n  // We will display Google as auth providers\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n  ],\n}\n\n\ninterface Props {}\n\nconst Login = (props: Props) => {\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const router = useRouter();\n\n\n  return (\n    <Container>\n      <Jumbotron>\n        <Container>\n          <h1>Login</h1>\n          <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={auth} />\n        </Container>\n      </Jumbotron>\n    </Container>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}
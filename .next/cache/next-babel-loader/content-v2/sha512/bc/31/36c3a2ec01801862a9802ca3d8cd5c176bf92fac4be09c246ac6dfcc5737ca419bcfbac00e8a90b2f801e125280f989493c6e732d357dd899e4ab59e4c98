{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/jordan/Projects/ScoreGames/score-games/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jordan/Projects/ScoreGames/score-games/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/jordan/Projects/ScoreGames/score-games/pages/game/list.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { auth, database } from \"../../features/Firebase/firebaseConnect\";\nimport { useRouter } from \"next/router\";\nimport Game, { Team, transformFromFirebase } from \"../../features/models/game\";\nimport Button from \"react-bootstrap/Button\";\n\nvar list = function list() {\n  _s();\n\n  var router = useRouter();\n\n  var _useState = useState(false),\n      loggedIn = _useState[0],\n      setLoggedIn = _useState[1];\n\n  var _useState2 = useState([]),\n      gamesList = _useState2[0],\n      setGamesList = _useState2[1];\n\n  useEffect(function () {\n    // listen for loggin in or loggin out.\n    var cancelAuthChange = auth.onAuthStateChanged(function (user) {\n      if (user) {\n        // user is signed in\n        setLoggedIn(function () {\n          return true;\n        });\n        console.log(\"you are logged in\");\n      } else {\n        // No user is signed in.\n        setLoggedIn(function () {\n          return false;\n        });\n        router.push(\"/account/login\");\n      }\n    }); // stop subscribing to auth changes\n\n    return cancelAuthChange;\n  });\n  var game = new Game(\"FirstGame\", [new Team(\"Team 1\", 0, [0]), new Team(\"Team 1\", 0, [0])]); // game.teams.push(new Team(\"Team 2\", 1, new History([1])))\n  // adds a new game to firebase\n\n  var addGame = function addGame() {\n    // check for login ---TODO\n    // add the game\n    var reference = database.ref(\"/games\").push(game); // add the game to the user\n\n    database.ref(\"/users/asdf/$asdf\").set(true);\n  }; // takes a game id passed in by reference and returns the game as a Game object\n\n\n  var createGameFromFirebase = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              database.ref(\"/\").once(\"value\").then(function (res) {\n                return transformFromFirebase(res.val());\n              }).then(function (value) {\n                console.log(value.getTeamNames());\n                return value;\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function createGameFromFirebase() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Welcome to the game list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: addGame,\n      children: \"Try me.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: createGameFromFirebase,\n      children: \"Test add from firebase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(list, \"GIGSVIhquW7GD/biF3ZdrXRPmjY=\", false, function () {\n  return [useRouter];\n});\n\nexport default list;","map":{"version":3,"sources":["/Users/jordan/Projects/ScoreGames/score-games/pages/game/list.tsx"],"names":["React","useEffect","useState","auth","database","useRouter","Game","Team","transformFromFirebase","Button","list","router","loggedIn","setLoggedIn","gamesList","setGamesList","cancelAuthChange","onAuthStateChanged","user","console","log","push","game","addGame","reference","ref","set","createGameFromFirebase","once","then","res","val","value","getTeamNames"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SACEC,IADF,EAGEC,QAHF,QAIO,yCAJP;AAMA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,IAEEC,IAFF,EAGEC,qBAHF,QAIO,4BAJP;AAKA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB,MAAMC,MAAM,GAAGN,SAAS,EAAxB;;AADiB,kBAGeH,QAAQ,CAAC,KAAD,CAHvB;AAAA,MAGVU,QAHU;AAAA,MAGAC,WAHA;;AAAA,mBAKiBX,QAAQ,CAAC,EAAD,CALzB;AAAA,MAKVY,SALU;AAAA,MAKCC,YALD;;AAOjBd,EAAAA,SAAS,CAAC,YAAM;AACd;AACA,QAAMe,gBAAgB,GAAGb,IAAI,CAACc,kBAAL,CAAwB,UAACC,IAAD,EAAU;AACzD,UAAIA,IAAJ,EAAU;AACR;AACAL,QAAAA,WAAW,CAAC;AAAA,iBAAM,IAAN;AAAA,SAAD,CAAX;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,OAJD,MAIO;AACL;AACAP,QAAAA,WAAW,CAAC;AAAA,iBAAM,KAAN;AAAA,SAAD,CAAX;AACAF,QAAAA,MAAM,CAACU,IAAP,CAAY,gBAAZ;AACD;AACF,KAVwB,CAAzB,CAFc,CAad;;AACA,WAAOL,gBAAP;AACD,GAfQ,CAAT;AAiBA,MAAMM,IAAI,GAAG,IAAIhB,IAAJ,CAAS,WAAT,EAAsB,CACjC,IAAIC,IAAJ,CAAS,QAAT,EAAmB,CAAnB,EAAsB,CAAC,CAAD,CAAtB,CADiC,EAEjC,IAAIA,IAAJ,CAAS,QAAT,EAAmB,CAAnB,EAAsB,CAAC,CAAD,CAAtB,CAFiC,CAAtB,CAAb,CAxBiB,CA6BjB;AAEA;;AACA,MAAMgB,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB;AAEA;AACA,QAAMC,SAAS,GAAGpB,QAAQ,CAACqB,GAAT,CAAa,QAAb,EAAuBJ,IAAvB,CAA4BC,IAA5B,CAAlB,CAJoB,CAMpB;;AACAlB,IAAAA,QAAQ,CAACqB,GAAT,sBAAkCC,GAAlC,CAAsC,IAAtC;AACD,GARD,CAhCiB,CA0CjB;;;AACA,MAAMC,sBAAsB;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAC7BvB,cAAAA,QAAQ,CACLqB,GADH,CACO,GADP,EAEGG,IAFH,CAEQ,OAFR,EAGGC,IAHH,CAGQ,UAACC,GAAD;AAAA,uBAAStB,qBAAqB,CAACsB,GAAG,CAACC,GAAJ,EAAD,CAA9B;AAAA,eAHR,EAIGF,IAJH,CAIQ,UAACG,KAAD,EAAiB;AACrBb,gBAAAA,OAAO,CAACC,GAAR,CAAYY,KAAK,CAACC,YAAN,EAAZ;AACA,uBAAOD,KAAP;AACD,eAPH;;AAD6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAtBL,sBAAsB;AAAA;AAAA;AAAA,KAA5B;;AAWA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEJ,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEI,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF;AAAA,kBADF;AAOD,CA7DD;;GAAMjB,I;UACWL,S;;;AA8DjB,eAAeK,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport {\n  auth,\n  firebase,\n  database,\n} from \"../../features/Firebase/firebaseConnect\";\n\nimport { useRouter } from \"next/router\";\nimport Game, {\n  Player,\n  Team,\n  transformFromFirebase,\n} from \"../../features/models/game\";\nimport Button from \"react-bootstrap/Button\";\n\nconst list = () => {\n  const router = useRouter();\n\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const [gamesList, setGamesList] = useState([]);\n\n  useEffect(() => {\n    // listen for loggin in or loggin out.\n    const cancelAuthChange = auth.onAuthStateChanged((user) => {\n      if (user) {\n        // user is signed in\n        setLoggedIn(() => true);\n        console.log(\"you are logged in\");\n      } else {\n        // No user is signed in.\n        setLoggedIn(() => false);\n        router.push(\"/account/login\");\n      }\n    });\n    // stop subscribing to auth changes\n    return cancelAuthChange;\n  });\n\n  const game = new Game(\"FirstGame\", [\n    new Team(\"Team 1\", 0, [0]),\n    new Team(\"Team 1\", 0, [0]),\n  ]);\n\n  // game.teams.push(new Team(\"Team 2\", 1, new History([1])))\n\n  // adds a new game to firebase\n  const addGame = () => {\n    // check for login ---TODO\n\n    // add the game\n    const reference = database.ref(\"/games\").push(game);\n\n    // add the game to the user\n    database.ref(`/users/asdf/$asdf`).set(true);\n  };\n\n  // takes a game id passed in by reference and returns the game as a Game object\n  const createGameFromFirebase = async () => {\n    database\n      .ref(\"/\")\n      .once(\"value\")\n      .then((res) => transformFromFirebase(res.val()))\n      .then((value: Game) => {\n        console.log(value.getTeamNames());\n        return value;\n      });\n  };\n\n  return (\n    <>\n      <div>Welcome to the game list</div>\n      <Button onClick={addGame}>Try me.</Button>\n      <Button onClick={createGameFromFirebase}>Test add from firebase</Button>\n    </>\n  );\n};\n\nexport default list;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jordan/Projects/ScoreGames/score-games/pages/game/list.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { auth, database } from \"../../features/Firebase/firebaseConnect\";\nimport { useRouter } from \"next/router\";\nimport Game, { Team, transformFromFirebase } from \"../../features/models/game\";\nimport Button from \"react-bootstrap/Button\";\n\nconst list = () => {\n  const router = useRouter();\n  const {\n    0: loggedIn,\n    1: setLoggedIn\n  } = useState(false);\n  const {\n    0: gamesList,\n    1: setGamesList\n  } = useState([]);\n  useEffect(() => {\n    // listen for loggin in or loggin out.\n    const cancelAuthChange = auth.onAuthStateChanged(user => {\n      if (user) {\n        // user is signed in\n        setLoggedIn(() => true);\n        console.log(\"you are logged in\");\n      } else {\n        // No user is signed in.\n        setLoggedIn(() => false);\n        router.push(\"/account/login\");\n      }\n    }); // stop subscribing to auth changes\n\n    return cancelAuthChange;\n  });\n  const game = new Game(\"FirstGame\", [new Team(\"Team 1\", 0, [0]), new Team(\"Team 1\", 0, [0])]); // game.teams.push(new Team(\"Team 2\", 1, new History([1])))\n  // adds a new game to firebase\n\n  const addGame = () => {\n    var _auth$currentUser;\n\n    // check for login ---TODO\n    const usersRef = database.ref(\"/users\"); // add the game\n\n    const reference = database.ref(\"/games\").push(game);\n    console.log(\"look here\", reference.key); // add the game to the user\n\n    database.ref(\"users/\" + ((_auth$currentUser = auth.currentUser) === null || _auth$currentUser === void 0 ? void 0 : _auth$currentUser.uid) + \"/games\").push(reference.key);\n  }; // takes a game id passed in by reference and returns the game as a Game object\n\n\n  const createGameFromFirebase = async () => {\n    database.ref(\"/\").once(\"value\").then(res => transformFromFirebase(res.val())).then(value => {\n      console.log(value.getTeamNames());\n      return value;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Welcome to the game list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: addGame,\n      children: \"Try me.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: createGameFromFirebase,\n      children: \"Test add from firebase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default list;","map":{"version":3,"sources":["/Users/jordan/Projects/ScoreGames/score-games/pages/game/list.tsx"],"names":["React","useEffect","useState","auth","database","useRouter","Game","Team","transformFromFirebase","Button","list","router","loggedIn","setLoggedIn","gamesList","setGamesList","cancelAuthChange","onAuthStateChanged","user","console","log","push","game","addGame","usersRef","ref","reference","key","currentUser","uid","createGameFromFirebase","once","then","res","val","value","getTeamNames"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SACEC,IADF,EAGEC,QAHF,QAIO,yCAJP;AAMA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,IAEEC,IAFF,EAGEC,qBAHF,QAIO,4BAJP;AAKA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AAEA,QAAM;AAAA,OAACO,QAAD;AAAA,OAAWC;AAAX,MAA0BX,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM;AAAA,OAACY,SAAD;AAAA,OAAYC;AAAZ,MAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMe,gBAAgB,GAAGb,IAAI,CAACc,kBAAL,CAAyBC,IAAD,IAAU;AACzD,UAAIA,IAAJ,EAAU;AACR;AACAL,QAAAA,WAAW,CAAC,MAAM,IAAP,CAAX;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,OAJD,MAIO;AACL;AACAP,QAAAA,WAAW,CAAC,MAAM,KAAP,CAAX;AACAF,QAAAA,MAAM,CAACU,IAAP,CAAY,gBAAZ;AACD;AACF,KAVwB,CAAzB,CAFc,CAad;;AACA,WAAOL,gBAAP;AACD,GAfQ,CAAT;AAiBA,QAAMM,IAAI,GAAG,IAAIhB,IAAJ,CAAS,WAAT,EAAsB,CACjC,IAAIC,IAAJ,CAAS,QAAT,EAAmB,CAAnB,EAAsB,CAAC,CAAD,CAAtB,CADiC,EAEjC,IAAIA,IAAJ,CAAS,QAAT,EAAmB,CAAnB,EAAsB,CAAC,CAAD,CAAtB,CAFiC,CAAtB,CAAb,CAxBiB,CA6BjB;AAEA;;AACA,QAAMgB,OAAO,GAAG,MAAM;AAAA;;AACpB;AAEA,UAAMC,QAAQ,GAAGpB,QAAQ,CAACqB,GAAT,CAAa,QAAb,CAAjB,CAHoB,CAKpB;;AACA,UAAMC,SAAS,GAAGtB,QAAQ,CAACqB,GAAT,CAAa,QAAb,EAAuBJ,IAAvB,CAA4BC,IAA5B,CAAlB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBM,SAAS,CAACC,GAAnC,EAPoB,CAQpB;;AAEAvB,IAAAA,QAAQ,CAACqB,GAAT,CAAa,iCAAWtB,IAAI,CAACyB,WAAhB,sDAAW,kBAAkBC,GAA7B,IAAmC,QAAhD,EAA0DR,IAA1D,CAA+DK,SAAS,CAACC,GAAzE;AAED,GAZD,CAhCiB,CA8CjB;;;AACA,QAAMG,sBAAsB,GAAG,YAAY;AACzC1B,IAAAA,QAAQ,CACLqB,GADH,CACO,GADP,EAEGM,IAFH,CAEQ,OAFR,EAGGC,IAHH,CAGSC,GAAD,IAASzB,qBAAqB,CAACyB,GAAG,CAACC,GAAJ,EAAD,CAHtC,EAIGF,IAJH,CAISG,KAAD,IAAiB;AACrBhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,KAAK,CAACC,YAAN,EAAZ;AACA,aAAOD,KAAP;AACD,KAPH;AAQD,GATD;;AAWA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEZ,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEO,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD,CAjED;;AAmEA,eAAepB,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport {\n  auth,\n  firebase,\n  database,\n} from \"../../features/Firebase/firebaseConnect\";\n\nimport { useRouter } from \"next/router\";\nimport Game, {\n  Player,\n  Team,\n  transformFromFirebase,\n} from \"../../features/models/game\";\nimport Button from \"react-bootstrap/Button\";\n\nconst list = () => {\n  const router = useRouter();\n\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const [gamesList, setGamesList] = useState([]);\n\n  useEffect(() => {\n    // listen for loggin in or loggin out.\n    const cancelAuthChange = auth.onAuthStateChanged((user) => {\n      if (user) {\n        // user is signed in\n        setLoggedIn(() => true);\n        console.log(\"you are logged in\");\n      } else {\n        // No user is signed in.\n        setLoggedIn(() => false);\n        router.push(\"/account/login\");\n      }\n    });\n    // stop subscribing to auth changes\n    return cancelAuthChange;\n  });\n\n  const game = new Game(\"FirstGame\", [\n    new Team(\"Team 1\", 0, [0]),\n    new Team(\"Team 1\", 0, [0]),\n  ]);\n\n  // game.teams.push(new Team(\"Team 2\", 1, new History([1])))\n\n  // adds a new game to firebase\n  const addGame = () => {\n    // check for login ---TODO\n\n    const usersRef = database.ref(\"/users\");\n\n    // add the game\n    const reference = database.ref(\"/games\").push(game);\n    console.log(\"look here\", reference.key);\n    // add the game to the user\n\n    database.ref(\"users/\" + auth.currentUser?.uid + \"/games\").push(reference.key);\n    \n  };\n\n  // takes a game id passed in by reference and returns the game as a Game object\n  const createGameFromFirebase = async () => {\n    database\n      .ref(\"/\")\n      .once(\"value\")\n      .then((res) => transformFromFirebase(res.val()))\n      .then((value: Game) => {\n        console.log(value.getTeamNames());\n        return value;\n      });\n  };\n\n  return (\n    <>\n      <div>Welcome to the game list</div>\n      <Button onClick={addGame}>Try me.</Button>\n      <Button onClick={createGameFromFirebase}>Test add from firebase</Button>\n    </>\n  );\n};\n\nexport default list;\n"]},"metadata":{},"sourceType":"module"}